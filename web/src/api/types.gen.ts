// This file is auto-generated by @hey-api/openapi-ts

/**
 * 角色组信息
 * 组信息
 */
export type GroupInfo = {
    /**
     * 角色组ID
     */
    id: number;
    /**
     * 名称
     */
    name: string;
    /**
     * 简介
     */
    intro: string;
    /**
     * 是否为系统默认组
     */
    is_default: boolean;
    /**
     * 是否为系统游客组
     */
    is_guest: boolean;
    /**
     * 组配置信息
     */
    options: {
        /**
         * 最大上传大小(kb)
         */
        max_upload_size: number;
        /**
         * 文件失效时间(秒)，失效后图片将会被删除，0为不限制
         */
        file_expire_seconds: number;
        /**
         * 同时上传的文件数量
         */
        limit_concurrent_upload: number;
        /**
         * 一分钟内可上传的文件数量，0为不限制
         */
        limit_per_minute: number;
        /**
         * 一小时内可上传的文件数量，0为不限制
         */
        limit_per_hour: number;
        /**
         * 一天内可上传的文件数量，0为不限制
         */
        limit_per_day: number;
        /**
         * 一周内可上传的文件数量，0为不限制
         */
        limit_per_week: number;
        /**
         * 一个月内可上传的文件数量，0为不限制
         */
        limit_per_month: number;
        /**
         * 支持上传的文件拓展名
         */
        allow_file_types: Array<string>;
    };
};

/**
 * 图片列表
 */
export type PhotoList = {
    /**
     * 图片ID
     */
    id?: number;
    /**
     * 名称
     */
    name?: string;
    /**
     * 简介
     */
    intro?: string;
    /**
     * 拓展名
     */
    extension?: string;
    /**
     * 宽度
     */
    width?: number;
    /**
     * 高度
     */
    height?: number;
    /**
     * 当前用户是否点赞了
     */
    is_liked?: boolean;
    /**
     * 缩略图链接
     */
    thumbnail_url?: string;
    /**
     * 图片链接
     */
    public_url?: string;
};

/**
 * 提交举报内容
 */
export type ReportContent = {
    /**
     * 举报内容
     */
    content: string;
};

/**
 * 相册列表
 */
export type AlbumList = {
    /**
     * 相册ID
     */
    id?: number;
    /**
     * 名称
     */
    name?: string;
    /**
     * 简介
     */
    intro?: string;
    /**
     * 创建时间
     */
    created_at?: string;
    /**
     * 图片数量
     */
    photo_count?: number;
    /**
     * 封面图片，最多三张
     */
    covers?: Array<string>;
    /**
     * 标签
     */
    tags?: Array<{
        /**
         * 标签ID
         */
        id?: number;
        /**
         * 标签名称
         */
        name?: string;
    }>;
};

export type GetApiV1AlbumsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: string;
        /**
         * 筛选关键字
         */
        q?: string;
        /**
         * 排序方式，newest=最新，earliest=最早，most=图片最多，least=图片最少
         */
        order?: string;
    };
    url: '/api/v1/albums';
};

export type GetApiV1AlbumsResponses = {
    200: {
        status: boolean;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                id?: number;
                name?: string;
                intro?: string;
                image_num?: number;
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
    };
};

export type GetApiV1AlbumsResponse = GetApiV1AlbumsResponses[keyof GetApiV1AlbumsResponses];

export type DeleteApiV1AlbumsByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/albums/{id}';
};

export type DeleteApiV1AlbumsByIdResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type DeleteApiV1AlbumsByIdResponse = DeleteApiV1AlbumsByIdResponses[keyof DeleteApiV1AlbumsByIdResponses];

export type PostApiV1UploadData = {
    body?: {
        /**
         * 图片
         */
        file: Blob | File;
        /**
         * 临时上传 Token
         */
        token?: string;
        /**
         * 权限，1=公开，0=私有
         */
        permission?: number;
        /**
         * 储存策略ID
         */
        strategy_id?: string;
        /**
         * 相册ID
         */
        album_id?: string;
        /**
         * 图片过期时间(yyyy-MM-dd HH:mm:ss)
         */
        expired_at?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/upload';
};

export type PostApiV1UploadResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type PostApiV1UploadResponse = PostApiV1UploadResponses[keyof PostApiV1UploadResponses];

export type GetApiV1ImagesData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: string;
        /**
         * 筛选关键字
         */
        q?: string;
        /**
         * 排序方式，newest=最新，earliest=最早，utmost=最大，least=最小
         */
        order?: string;
        /**
         * 权限，public=公开的，private=私有的
         */
        permission?: string;
        /**
         * 相册 ID
         */
        album_id?: string;
    };
    url: '/api/v1/images';
};

export type GetApiV1ImagesResponses = {
    200: {
        status: boolean;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                name: string;
                pathname: string;
                mimetype: string;
                extension: string;
                md5: string;
                sha1: string;
                size: number;
                width: number;
                height: number;
                key: number;
                human_date: string;
                date: string;
                links: {
                    url: string;
                    html: string;
                    bbcode: string;
                    markdown: string;
                    markdown_with_link: string;
                    thumbnail_url: string;
                    delete_url: string;
                };
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
    };
};

export type GetApiV1ImagesResponse = GetApiV1ImagesResponses[keyof GetApiV1ImagesResponses];

export type DeleteApiV1ImagesByKeyData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片key
         */
        key: number;
    };
    query?: never;
    url: '/api/v1/images/{key}';
};

export type DeleteApiV1ImagesByKeyResponses = {
    200: {
        status: boolean;
        message: string;
        time: number;
    };
};

export type DeleteApiV1ImagesByKeyResponse = DeleteApiV1ImagesByKeyResponses[keyof DeleteApiV1ImagesByKeyResponses];

export type PostApiV1ImagesTokensData = {
    body?: {
        /**
         * 生成数量，最大 100
         */
        num: string;
        /**
         * 有效期(秒)，最大 2626560 (一个月)
         */
        seconds: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/images/tokens';
};

export type PostApiV1ImagesTokensResponses = {
    200: {
        status: boolean;
        message: string;
        data: {
            tokens: Array<{
                token?: string;
                expired_at?: string;
            }>;
        };
    };
};

export type PostApiV1ImagesTokensResponse = PostApiV1ImagesTokensResponses[keyof PostApiV1ImagesTokensResponses];

export type GetApiV1StrategiesData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/api/v1/strategies';
};

export type GetApiV1StrategiesResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type GetApiV1StrategiesResponse = GetApiV1StrategiesResponses[keyof GetApiV1StrategiesResponses];

export type GetApiV1ProfileData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/api/v1/profile';
};

export type GetApiV1ProfileResponses = {
    200: {
        status: boolean;
        message: string;
        data: {
            avatar: string;
            name: string;
            username: string;
            email: string;
            image_num: number;
            album_num: number;
            registered_ip: string;
            url: string;
            capacity: number;
            size: number;
        };
    };
};

export type GetApiV1ProfileResponse = GetApiV1ProfileResponses[keyof GetApiV1ProfileResponses];

export type GetOauthByIdRedirectData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 三方授权驱动ID
         */
        id: string;
    };
    query?: {
        /**
         * 授权成功回调地址
         */
        redirect_url?: string;
    };
    url: '/oauth/{id}/redirect';
};

export type GetOauthByIdRedirectResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 授权url
             */
            redirect_url: string;
        };
        time: number;
    };
};

export type GetOauthByIdRedirectResponse = GetOauthByIdRedirectResponses[keyof GetOauthByIdRedirectResponses];

export type PostOauthByIdLoginData = {
    body?: {
        /**
         * 三方授权code
         */
        code: string;
    };
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 三方登录驱动ID
         */
        id: string;
    };
    query?: never;
    url: '/oauth/{id}/login';
};

export type PostOauthByIdLoginResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 用户昵称
             */
            name: string;
            /**
             * Bearer token
             */
            token: string;
        };
        time: number;
    };
    202: {
        status: string;
        message: string;
        data: {
            /**
             * 授权 token，用于注册或登录时绑定账号
             */
            token: string;
        };
        time: number;
    };
};

export type PostOauthByIdLoginResponse = PostOauthByIdLoginResponses[keyof PostOauthByIdLoginResponses];

export type PostOauthByIdBindData = {
    body?: {
        /**
         * 三方授权code
         */
        code: string;
    };
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 三方授权驱动ID
         */
        id: string;
    };
    query?: never;
    url: '/oauth/{id}/bind';
};

export type PostOauthByIdBindResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostOauthByIdBindResponse = PostOauthByIdBindResponses[keyof PostOauthByIdBindResponses];

export type DeleteOauthByIdUnbindData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 三方授权ID
         */
        id: string;
    };
    query?: never;
    url: '/oauth/{id}/unbind';
};

export type DeleteOauthByIdUnbindResponses = {
    200: {
        status: string;
        message: string;
        data: unknown;
        time: number;
    };
};

export type DeleteOauthByIdUnbindResponse = DeleteOauthByIdUnbindResponses[keyof DeleteOauthByIdUnbindResponses];

export type GetOauthBindsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
    };
    url: '/oauth/binds';
};

export type GetOauthBindsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * ID
                 */
                id: number;
                /**
                 * 头像地址
                 */
                avatar: string;
                /**
                 * 邮箱，可能为空
                 */
                email: string;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 昵称
                 */
                nickname: string;
                /**
                 * 绑定时间
                 */
                created_at: string;
                /**
                 * 驱动信息
                 */
                driver: {
                    /**
                     * 驱动ID
                     */
                    id: number;
                    /**
                     * 驱动名称
                     */
                    name: string;
                    /**
                     * 驱动简介
                     */
                    intro: string;
                    /**
                     * 驱动提供者
                     */
                    provider: string;
                };
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetOauthBindsResponse = GetOauthBindsResponses[keyof GetOauthBindsResponses];

export type PostLoginData = {
    body?: {
        /**
         * 登录类型
         */
        login_type: 'username' | 'email' | 'phone';
        /**
         * 用户名
         */
        username: string;
        /**
         * 密码
         */
        password: string;
        /**
         * 是否记住账号
         */
        remember: boolean;
        /**
         * 授权登录code
         */
        token: string;
        /**
         * 国家代码
         */
        country_code: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/login';
};

export type PostLoginErrors = {
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                username: Array<string>;
            };
        };
        time: number;
    };
};

export type PostLoginError = PostLoginErrors[keyof PostLoginErrors];

export type PostLoginResponses = {
    200: {
        status: string;
        message: string;
        data: {
            name: string;
            token: string;
        };
        time: number;
    };
};

export type PostLoginResponse = PostLoginResponses[keyof PostLoginResponses];

export type PostLogoutData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/logout';
};

export type PostLogoutResponses = {
    200: {
        code: number;
        message: string;
        time: number;
    };
};

export type PostLogoutResponse = PostLogoutResponses[keyof PostLogoutResponses];

export type PostRegisterData = {
    body?: {
        /**
         * 邮箱，手机号为空时必填
         */
        email: string;
        /**
         * 手机号，邮箱为空时必填
         */
        phone: string;
        /**
         * 用户名，注册后无法更改
         */
        username: string;
        /**
         * 姓名
         */
        name?: string;
        /**
         * 密码
         */
        password: string;
        /**
         * 确认密码
         */
        password_confirmation: string;
        /**
         * 验证码
         */
        code: string;
        /**
         * 授权登录code
         */
        token?: string;
        /**
         * 国家
         */
        country_code?: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/register';
};

export type PostRegisterErrors = {
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                password: Array<string>;
            };
        };
        time: number;
    };
};

export type PostRegisterError = PostRegisterErrors[keyof PostRegisterErrors];

export type PostRegisterResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostRegisterResponse = PostRegisterResponses[keyof PostRegisterResponses];

export type PostSmsResetPasswordData = {
    body?: {
        /**
         * 手机号
         */
        phone: string;
        /**
         * 国家代码
         */
        country_code: string;
        /**
         * 新密码
         */
        password: string;
        /**
         * 确认新密码
         */
        password_confirmation: string;
        /**
         * 短信验证码
         */
        code: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/sms/reset_password';
};

export type PostSmsResetPasswordErrors = {
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                phone: Array<string>;
                code: Array<string>;
            };
        };
        time: number;
    };
};

export type PostSmsResetPasswordError = PostSmsResetPasswordErrors[keyof PostSmsResetPasswordErrors];

export type PostSmsResetPasswordResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostSmsResetPasswordResponse = PostSmsResetPasswordResponses[keyof PostSmsResetPasswordResponses];

export type PostMailResetPasswordData = {
    body?: {
        /**
         * 邮箱
         */
        email: string;
        /**
         * 新密码
         */
        password: string;
        /**
         * 确认新密码
         */
        password_confirmation: string;
        /**
         * 短信验证码
         */
        code: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/mail/reset_password';
};

export type PostMailResetPasswordResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostMailResetPasswordResponse = PostMailResetPasswordResponses[keyof PostMailResetPasswordResponses];

export type GetUserAlbumsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string | null;
    };
    url: '/user/albums';
};

export type GetUserAlbumsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 相册ID
                 */
                id: number;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                is_public: boolean;
                /**
                 * 创建时间
                 */
                created_at: string;
                /**
                 * 图片数量
                 */
                photo_count: number;
                /**
                 * 封面图，最多三张，可能为空
                 */
                covers: Array<string>;
                /**
                 * 相册标签
                 */
                tags: Array<string>;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetUserAlbumsResponse = GetUserAlbumsResponses[keyof GetUserAlbumsResponses];

export type PostUserAlbumsData = {
    body?: {
        /**
         * 相册名称
         */
        name?: string;
        /**
         * 简介
         */
        intro?: string;
        /**
         * 是否公开
         */
        is_public?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/albums';
};

export type PostUserAlbumsErrors = {
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                name: Array<string>;
            };
        };
        time: number;
    };
};

export type PostUserAlbumsError = PostUserAlbumsErrors[keyof PostUserAlbumsErrors];

export type PostUserAlbumsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 相册ID
             */
            id: number;
        };
        time: number;
    };
};

export type PostUserAlbumsResponse = PostUserAlbumsResponses[keyof PostUserAlbumsResponses];

export type DeleteUserAlbumsByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}';
};

export type DeleteUserAlbumsByIdResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserAlbumsByIdResponse = DeleteUserAlbumsByIdResponses[keyof DeleteUserAlbumsByIdResponses];

export type GetUserAlbumsByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}';
};

export type GetUserAlbumsByIdResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 相册ID
             */
            id: number;
            /**
             * 名称
             */
            name: string;
            /**
             * 简介
             */
            intro: string;
            /**
             * 是否公开
             */
            is_public: boolean;
            /**
             * 创建时间
             */
            created_at: string;
            /**
             * 图片数量
             */
            photo_count: number;
            /**
             * 封面图，最多三张，可能为空
             */
            covers: Array<string>;
            /**
             * 标签
             */
            tags: Array<string>;
        };
        time: number;
    };
};

export type GetUserAlbumsByIdResponse = GetUserAlbumsByIdResponses[keyof GetUserAlbumsByIdResponses];

export type PutUserAlbumsByIdData = {
    body?: {
        /**
         * 相册名称
         */
        name?: string;
        /**
         * 简介
         */
        intro?: string;
        /**
         * 是否公开
         */
        is_public?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}';
};

export type PutUserAlbumsByIdResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type PutUserAlbumsByIdResponse = PutUserAlbumsByIdResponses[keyof PutUserAlbumsByIdResponses];

export type DeleteUserAlbumsByIdPhotosData = {
    body?: Array<number>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}/photos';
};

export type DeleteUserAlbumsByIdPhotosResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserAlbumsByIdPhotosResponse = DeleteUserAlbumsByIdPhotosResponses[keyof DeleteUserAlbumsByIdPhotosResponses];

export type PostUserAlbumsByIdPhotosData = {
    body?: Array<number>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}/photos';
};

export type PostUserAlbumsByIdPhotosResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostUserAlbumsByIdPhotosResponse = PostUserAlbumsByIdPhotosResponses[keyof PostUserAlbumsByIdPhotosResponses];

export type DeleteUserAlbumsByIdTagsData = {
    body?: Array<{
        [key: string]: unknown;
    }>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}/tags';
};

export type DeleteUserAlbumsByIdTagsResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserAlbumsByIdTagsResponse = DeleteUserAlbumsByIdTagsResponses[keyof DeleteUserAlbumsByIdTagsResponses];

export type PostUserAlbumsByIdTagsData = {
    body?: Array<{
        [key: string]: unknown;
    }>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/user/albums/{id}/tags';
};

export type PostUserAlbumsByIdTagsResponses = {
    201: {
        [key: string]: unknown;
    };
};

export type PostUserAlbumsByIdTagsResponse = PostUserAlbumsByIdTagsResponses[keyof PostUserAlbumsByIdTagsResponses];

export type DeleteUserPhotosData = {
    body?: Array<number>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/photos';
};

export type DeleteUserPhotosResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserPhotosResponse = DeleteUserPhotosResponses[keyof DeleteUserPhotosResponses];

export type GetUserPhotosData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
        /**
         * 相册ID
         */
        album_id?: number;
        /**
         * 储存ID
         */
        storage_id?: number;
        /**
         * 排序方式
         */
        order_by?: 'latest' | 'oldest';
    };
    url: '/user/photos';
};

export type GetUserPhotosResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 图片ID
                 */
                id: number;
                /**
                 * 自定义名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                /**
                 * 文件名
                 */
                filename: string;
                /**
                 * 文件路径名
                 */
                pathname: string;
                /**
                 * 文件类型
                 */
                mimetype: string;
                /**
                 * 拓展名
                 */
                extension: string;
                /**
                 * md5值
                 */
                md5: string;
                /**
                 * sha1值
                 */
                sha1: string;
                /**
                 * 宽度
                 */
                width: number;
                /**
                 * 高度
                 */
                height: number;
                /**
                 * 是否公开
                 */
                is_public: boolean;
                /**
                 * 上传ip地址
                 */
                ip_address: string;
                /**
                 * 到期时间
                 */
                expired_at: unknown;
                /**
                 * 创建时间
                 */
                created_at: string;
                /**
                 * 缩略图地址
                 */
                thumbnail_url: string;
                /**
                 * 原图地址
                 */
                public_url: string;
                /**
                 * 所在角色组信息
                 */
                group: {
                    /**
                     * 角色组ID
                     */
                    id: number;
                    /**
                     * 角色组名称
                     */
                    name: string;
                    /**
                     * 角色组简介
                     */
                    intro: string;
                };
                /**
                 * 所在储存信息
                 */
                storage: {
                    /**
                     * 储存ID
                     */
                    id: number;
                    /**
                     * 储存名称
                     */
                    name: string;
                    /**
                     * 储存简介
                     */
                    intro: string;
                    /**
                     * 储存提供者
                     */
                    provider: string;
                };
                /**
                 * 所在相册列表
                 */
                albums: Array<{
                    id: number;
                    name: string;
                    intro: string;
                }>;
                /**
                 * 标签信息
                 */
                tags: Array<{
                    id: number;
                    name: string;
                }>;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetUserPhotosResponse = GetUserPhotosResponses[keyof GetUserPhotosResponses];

export type GetUserPhotosByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/user/photos/{id}';
};

export type GetUserPhotosByIdResponses = {
    200: {
        status: string;
        message: string;
        data: Array<{
            /**
             * 图片ID
             */
            id?: number;
            /**
             * 自定义名称
             */
            name?: string;
            /**
             * 简介
             */
            intro?: string;
            /**
             * 文件名
             */
            filename?: string;
            /**
             * 文件路径名
             */
            pathname?: string;
            /**
             * 文件类型
             */
            mimetype?: string;
            /**
             * 拓展名
             */
            extension?: string;
            /**
             * md5值
             */
            md5?: string;
            /**
             * sha1值
             */
            sha1?: string;
            /**
             * 宽度
             */
            width?: number;
            /**
             * 高度
             */
            height?: number;
            /**
             * 是否公开
             */
            is_public?: boolean;
            /**
             * 上传ip地址
             */
            ip_address?: string;
            /**
             * 到期时间
             */
            expired_at?: unknown;
            /**
             * 创建时间
             */
            created_at?: string;
            /**
             * 所在角色组信息
             */
            group?: {
                /**
                 * 角色组ID
                 */
                id: number;
                /**
                 * 角色组名称
                 */
                name: string;
                /**
                 * 角色组简介
                 */
                intro: string;
            };
            /**
             * 所在储存信息
             */
            storage?: {
                /**
                 * 储存ID
                 */
                id: number;
                /**
                 * 储存名称
                 */
                name: string;
                /**
                 * 储存简介
                 */
                intro: string;
                /**
                 * 储存提供者
                 */
                provider: 'local' | 's3' | 'oss' | 'cos' | 'qiniu' | 'upyun' | 'sftp' | 'ftp' | 'webdav';
            };
            /**
             * 所在相册信息
             */
            album?: {
                /**
                 * 相册ID
                 */
                id: number;
                /**
                 * 相册名称
                 */
                name: string;
                /**
                 * 相册简介
                 */
                intro: string;
            };
            /**
             * 标签信息
             */
            tags?: Array<{
                /**
                 * 标签ID
                 */
                id: number;
                /**
                 * 标签名称
                 */
                name: string;
            }>;
        }>;
        time: number;
    };
};

export type GetUserPhotosByIdResponse = GetUserPhotosByIdResponses[keyof GetUserPhotosByIdResponses];

export type PutUserPhotosByIdData = {
    body?: {
        /**
         * 名称
         */
        name: string;
        /**
         * 简介
         */
        intro?: string;
        /**
         * 是否公开
         */
        is_public: boolean;
        /**
         * 标签
         */
        tags: Array<string>;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/user/photos/{id}';
};

export type PutUserPhotosByIdResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type PutUserPhotosByIdResponse = PutUserPhotosByIdResponses[keyof PutUserPhotosByIdResponses];

export type DeleteUserPhotosByIdTagsData = {
    body?: Array<{
        [key: string]: unknown;
    }>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/user/photos/{id}/tags';
};

export type DeleteUserPhotosByIdTagsResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserPhotosByIdTagsResponse = DeleteUserPhotosByIdTagsResponses[keyof DeleteUserPhotosByIdTagsResponses];

export type PostUserPhotosByIdTagsData = {
    body?: Array<{
        [key: string]: unknown;
    }>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/user/photos/{id}/tags';
};

export type PostUserPhotosByIdTagsResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostUserPhotosByIdTagsResponse = PostUserPhotosByIdTagsResponses[keyof PostUserPhotosByIdTagsResponses];

export type PutUserPhotosUpdateData = {
    body?: {
        /**
         * 名称
         */
        name: string;
        /**
         * 简介
         */
        intro?: string;
        /**
         * 是否公开
         */
        is_public: boolean;
        /**
         * 标签
         */
        tags: Array<string>;
        /**
         * 图片id
         */
        ids: Array<number>;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/photos/update';
};

export type PutUserPhotosUpdateResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type PutUserPhotosUpdateResponse = PutUserPhotosUpdateResponses[keyof PutUserPhotosUpdateResponses];

export type DeleteUserSharesData = {
    body?: Array<number>;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/shares';
};

export type DeleteUserSharesResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserSharesResponse = DeleteUserSharesResponses[keyof DeleteUserSharesResponses];

export type GetUserSharesData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/user/shares';
};

export type GetUserSharesResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 分享ID
                 */
                id: number;
                /**
                 * 分享类型
                 */
                type: string;
                /**
                 * 分享slug
                 */
                slug: string;
                /**
                 * 内容
                 */
                content: string | null;
                /**
                 * 密码
                 */
                password: string;
                /**
                 * 浏览数量
                 */
                view_count: number;
                /**
                 * 到期时间
                 */
                expired_at: string | null;
                /**
                 * 分享创建时间
                 */
                created_at: string;
                /**
                 * 点赞数量
                 */
                like_count: number;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetUserSharesResponse = GetUserSharesResponses[keyof GetUserSharesResponses];

export type PostUserSharesData = {
    body?: {
        /**
         * 分享内容
         */
        content?: string;
        /**
         * 访问密码
         */
        password?: string;
        /**
         * 到期时间
         */
        expired_at?: string;
        /**
         * 分享类型
         */
        type: 'album' | 'photo';
        /**
         * 相册或图片ID，如果是相册则仅支持传一个ID
         */
        ids: Array<number>;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/shares';
};

export type PostUserSharesResponses = {
    201: {
        status: string;
        message: string;
        data: {
            /**
             * slug
             */
            slug: string;
            /**
             * 分享ID
             */
            id: number;
        };
        time: number;
    };
};

export type PostUserSharesResponse = PostUserSharesResponses[keyof PostUserSharesResponses];

export type GetUserSharesByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 分享ID
         */
        id: number;
    };
    query?: never;
    url: '/user/shares/{id}';
};

export type GetUserSharesByIdResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 分享ID
             */
            id: number;
            /**
             * 分享类型
             */
            type: string;
            slug: string;
            content: unknown;
            /**
             * 密码
             */
            password: string;
            /**
             * 浏览数量
             */
            view_count: number;
            expired_at: unknown;
            /**
             * 创建时间
             */
            created_at: string;
            /**
             * 点赞数量
             */
            like_count: number;
        };
        time: number;
    };
};

export type GetUserSharesByIdResponse = GetUserSharesByIdResponses[keyof GetUserSharesByIdResponses];

export type PutUserSharesByIdData = {
    body?: {
        /**
         * 分享内容
         */
        content?: string;
        /**
         * 访问密码
         */
        password?: string;
        /**
         * 到期时间
         */
        expired_at?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 分享ID
         */
        id: number;
    };
    query?: never;
    url: '/user/shares/{id}';
};

export type PutUserSharesByIdResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type PutUserSharesByIdResponse = PutUserSharesByIdResponses[keyof PutUserSharesByIdResponses];

export type GetUserGroupsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
    };
    url: '/user/groups';
};

export type GetUserGroupsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * id
                 */
                id: number;
                /**
                 * 来源
                 */
                from: 'system' | 'subscribe';
                /**
                 * 到期时间，可能为null
                 */
                expired_at?: string | null;
                /**
                 * 创建时间
                 */
                created_at: string;
                group?: GroupInfo;
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetUserGroupsResponse = GetUserGroupsResponses[keyof GetUserGroupsResponses];

export type DeleteUserGroupsByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 订阅ID
         */
        id: number;
    };
    query?: never;
    url: '/user/groups/{id}';
};

export type DeleteUserGroupsByIdResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserGroupsByIdResponse = DeleteUserGroupsByIdResponses[keyof DeleteUserGroupsByIdResponses];

export type GetUserCapacitiesData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
    };
    url: '/user/capacities';
};

export type GetUserCapacitiesResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * ID
                 */
                id?: number;
                /**
                 * 容量(kb)
                 */
                capacity?: number;
                /**
                 * 来源
                 */
                from?: string;
                /**
                 * 到期时间，可能为null
                 */
                expired_at?: string | null;
                /**
                 * 创建时间
                 */
                created_at?: string;
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetUserCapacitiesResponse = GetUserCapacitiesResponses[keyof GetUserCapacitiesResponses];

export type DeleteUserCapacitiesByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 订阅ID
         */
        id: number;
    };
    query?: never;
    url: '/user/capacities/{id}';
};

export type DeleteUserCapacitiesByIdResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserCapacitiesByIdResponse = DeleteUserCapacitiesByIdResponses[keyof DeleteUserCapacitiesByIdResponses];

export type PostUserOrdersPreviewData = {
    body?: {
        /**
         * 套餐价格ID
         */
        price_id: number;
        /**
         * 优惠券
         */
        coupon_code?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/orders/preview';
};

export type PostUserOrdersPreviewResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 订单金额
             */
            amount: number;
            /**
             * 抵扣金额
             */
            deduct_amount: number;
        };
        time: number;
    };
};

export type PostUserOrdersPreviewResponse = PostUserOrdersPreviewResponses[keyof PostUserOrdersPreviewResponses];

export type GetUserOrdersData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/user/orders';
};

export type GetUserOrdersResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 订单号
                 */
                trade_no: string;
                amount: number;
                /**
                 * 套餐快照
                 */
                snapshot: {
                    /**
                     * 套餐名称
                     */
                    name: string;
                    /**
                     * 套餐简介
                     */
                    intro: string;
                    /**
                     * 套餐权益
                     */
                    features: Array<string>;
                    /**
                     * 套餐角标内容
                     */
                    badge: string;
                };
                /**
                 * 产品快照
                 */
                product: {
                    /**
                     * 产品名称
                     */
                    name: string;
                    /**
                     * 时长(秒)
                     */
                    duration: number;
                    price: number;
                };
                /**
                 * 支付方式
                 */
                pay_method: string;
                /**
                 * 状态
                 */
                status: string;
                paid_at: unknown;
                canceled_at: string | null;
                /**
                 * 创建时间
                 */
                created_at: string;
                coupon: unknown;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: string;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetUserOrdersResponse = GetUserOrdersResponses[keyof GetUserOrdersResponses];

export type PostUserOrdersData = {
    body?: {
        /**
         * 套餐价格ID
         */
        price_id: number;
        /**
         * 优惠券
         */
        coupon_code?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/orders';
};

export type PostUserOrdersResponses = {
    201: {
        status: string;
        message: string;
        data: {
            /**
             * 系统订单号
             */
            trade_no: string;
            /**
             * 是否直接支付成功了
             */
            is_paid: boolean;
        };
        time: number;
    };
};

export type PostUserOrdersResponse = PostUserOrdersResponses[keyof PostUserOrdersResponses];

export type DeleteUserOrdersByTradeNoData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 订单号
         */
        trade_no: string;
    };
    query?: never;
    url: '/user/orders/{trade_no}';
};

export type DeleteUserOrdersByTradeNoResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserOrdersByTradeNoResponse = DeleteUserOrdersByTradeNoResponses[keyof DeleteUserOrdersByTradeNoResponses];

export type GetUserOrdersByTradeNoData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 订单号
         */
        trade_no: string;
    };
    query?: never;
    url: '/user/orders/{trade_no}';
};

export type GetUserOrdersByTradeNoResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 订单号
             */
            trade_no: string;
            /**
             * 实付金额(分)
             */
            amount: number;
            /**
             * 抵扣金额(分)
             */
            deduct_amount: number;
            /**
             * 套餐快照
             */
            snapshot: {
                /**
                 * 套餐名称
                 */
                name: string;
                /**
                 * 套餐简介
                 */
                intro: string;
                /**
                 * 套餐权益
                 */
                features: Array<string>;
                /**
                 * 套餐角标内容
                 */
                badge: string;
            };
            /**
             * 产品快照
             */
            product: {
                /**
                 * 产品名称
                 */
                name: string;
                /**
                 * 时长(秒)
                 */
                duration: number;
                /**
                 * 价格(分)
                 */
                price: number;
            };
            /**
             * 支付方式
             */
            pay_method: string;
            /**
             * 状态
             */
            status: string;
            /**
             * 支付时间，可能为null
             */
            paid_at: string;
            /**
             * 取消时间，可能为null
             */
            canceled_at: unknown;
            /**
             * 创建时间
             */
            created_at: string;
            /**
             * 优惠券信息，可能为null
             */
            coupon: {
                /**
                 * 优惠券名称
                 */
                name: string;
                /**
                 * 券码
                 */
                code: string;
            };
        };
        time: number;
    };
};

export type GetUserOrdersByTradeNoResponse = GetUserOrdersByTradeNoResponses[keyof GetUserOrdersByTradeNoResponses];

export type PutUserOrdersByTradeNoCancelData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 订单号
         */
        trade_no: string;
    };
    query?: never;
    url: '/user/orders/{trade_no}/cancel';
};

export type PutUserOrdersByTradeNoCancelResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type PutUserOrdersByTradeNoCancelResponse = PutUserOrdersByTradeNoCancelResponses[keyof PutUserOrdersByTradeNoCancelResponses];

export type PostUserOrdersByTradeNoPayData = {
    body?: {
        /**
         * 支付平台
         */
        platform: 'alipay' | 'wechat' | 'unipay' | 'paypal' | 'epay';
        /**
         * 支付渠道
         */
        channel: 'alipay' | 'wechat' | 'unipay' | 'paypal' | 'wxpay' | 'usdt' | 'qqpay' | 'bank' | 'jdpay' | 'unified';
        /**
         * 支付方法
         */
        method: 'web' | 'h5' | 'app' | 'mini' | 'pos' | 'scan' | 'mp';
        /**
         * 同步跳转地址，当使用paypal时必传，否则支付时无法跳转回站点
         */
        return_url?: string;
        /**
         * 取消支付后跳转地址
         */
        cancel_url?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 订单号
         */
        trade_no: string;
    };
    query?: never;
    url: '/user/orders/{trade_no}/pay';
};

export type PostUserOrdersByTradeNoPayResponses = {
    201: {
        status: string;
        message: string;
        data: {
            /**
             * 支付 URL
             */
            url: string;
        };
        time: number;
    };
};

export type PostUserOrdersByTradeNoPayResponse = PostUserOrdersByTradeNoPayResponses[keyof PostUserOrdersByTradeNoPayResponses];

export type GetUserTicketsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/user/tickets';
};

export type GetUserTicketsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                id: number;
                /**
                 * 工单号
                 */
                issue_no: string;
                /**
                 * 工单标题
                 */
                title: string;
                /**
                 * 工单级别
                 */
                level: string;
                /**
                 * 工单状态
                 */
                status: string;
                /**
                 * 创建时间
                 */
                created_at: string;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetUserTicketsResponse = GetUserTicketsResponses[keyof GetUserTicketsResponses];

export type PostUserTicketsData = {
    body?: {
        /**
         * 标题
         */
        title: string;
        /**
         * 工单级别
         */
        level: 'low' | 'medium' | 'high';
        /**
         * 内容
         */
        content: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/tickets';
};

export type PostUserTicketsResponses = {
    201: {
        status: string;
        message: string;
        data: {
            /**
             * 工单号
             */
            issue_no: string;
        };
        time: number;
    };
};

export type PostUserTicketsResponse = PostUserTicketsResponses[keyof PostUserTicketsResponses];

export type DeleteUserTicketsByIssueNoData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 工单编号
         */
        issue_no: string;
    };
    query?: never;
    url: '/user/tickets/{issue_no}';
};

export type DeleteUserTicketsByIssueNoResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteUserTicketsByIssueNoResponse = DeleteUserTicketsByIssueNoResponses[keyof DeleteUserTicketsByIssueNoResponses];

export type GetUserTicketsByIssueNoData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 工单号
         */
        issue_no: string;
    };
    query?: never;
    url: '/user/tickets/{issue_no}';
};

export type GetUserTicketsByIssueNoResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 工单ID
             */
            id: number;
            /**
             * 工单号
             */
            issue_no: string;
            /**
             * 标题
             */
            title: string;
            /**
             * 级别
             */
            level: string;
            /**
             * 状态
             */
            status: string;
            /**
             * 创建时间
             */
            created_at: string;
        };
        time: number;
    };
};

export type GetUserTicketsByIssueNoResponse = GetUserTicketsByIssueNoResponses[keyof GetUserTicketsByIssueNoResponses];

export type GetUserTicketsByIssueNoRepliesData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 工单号
         */
        issue_no: string;
    };
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
    };
    url: '/user/tickets/{issue_no}/replies';
};

export type GetUserTicketsByIssueNoRepliesResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * 回复ID
                 */
                id: number;
                /**
                 * 回复内容
                 */
                content: string;
                /**
                 * 已读时间，可能为null
                 */
                read_at: string | null;
                /**
                 * 回复时间
                 */
                created_at: string;
                /**
                 * 用户信息
                 */
                user: {
                    /**
                     * 用户ID
                     */
                    id: number;
                    /**
                     * 头像，可能为空
                     */
                    avatar_url: string;
                    /**
                     * 名称
                     */
                    name: string;
                };
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetUserTicketsByIssueNoRepliesResponse = GetUserTicketsByIssueNoRepliesResponses[keyof GetUserTicketsByIssueNoRepliesResponses];

export type PostUserTicketsByIssueNoReplyData = {
    body?: {
        /**
         * 回复内容
         */
        content: string;
        /**
         * 是否需要接收通知
         */
        is_notify: boolean;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 工单号
         */
        issue_no: string;
    };
    query?: never;
    url: '/user/tickets/{issue_no}/reply';
};

export type PostUserTicketsByIssueNoReplyResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostUserTicketsByIssueNoReplyResponse = PostUserTicketsByIssueNoReplyResponses[keyof PostUserTicketsByIssueNoReplyResponses];

export type PutUserTicketsByIssueNoCloseData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 工单编号
         */
        issue_no: string;
    };
    query?: never;
    url: '/user/tickets/{issue_no}/close';
};

export type PutUserTicketsByIssueNoCloseResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type PutUserTicketsByIssueNoCloseResponse = PutUserTicketsByIssueNoCloseResponses[keyof PutUserTicketsByIssueNoCloseResponses];

export type GetUserTokensData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/tokens';
};

export type GetUserTokensResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                id: number;
                name: string;
                last_used_at: string | null;
                expires_at: string | null;
                created_at: string;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetUserTokensResponse = GetUserTokensResponses[keyof GetUserTokensResponses];

export type PostUserTokensData = {
    body?: {
        /**
         * 令牌名称
         */
        name: string;
        /**
         * 权限
         */
        abilities: string;
        /**
         * 到期时间(yyyy-MM-dd HH:mm:ss)
         */
        expires_at?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/tokens';
};

export type PostUserTokensErrors = {
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                name: Array<string>;
            };
        };
        time: number;
    };
};

export type PostUserTokensError = PostUserTokensErrors[keyof PostUserTokensErrors];

export type PostUserTokensResponses = {
    200: {
        status: string;
        message: string;
        data: {
            name: string;
            token: string;
            expires_at: string;
        };
        time: number;
    };
};

export type PostUserTokensResponse = PostUserTokensResponses[keyof PostUserTokensResponses];

export type DeleteUserTokensByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * token id
         */
        id: string;
    };
    query?: never;
    url: '/user/tokens/{id}';
};

export type DeleteUserTokensByIdResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type DeleteUserTokensByIdResponse = DeleteUserTokensByIdResponses[keyof DeleteUserTokensByIdResponses];

export type PutUserPasswordData = {
    body?: {
        /**
         * 当前密码
         */
        current_password: string;
        /**
         * 新密码
         */
        password: string;
        /**
         * 确认新密码
         */
        password_confirmation: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/password';
};

export type PutUserPasswordErrors = {
    401: {
        status: string;
        message: string;
        time: number;
    };
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                current_password: Array<string>;
            };
        };
        time: number;
    };
};

export type PutUserPasswordError = PutUserPasswordErrors[keyof PutUserPasswordErrors];

export type PutUserPasswordResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
};

export type PutUserPasswordResponse = PutUserPasswordResponses[keyof PutUserPasswordResponses];

export type GetUserProfileData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/profile';
};

export type GetUserProfileResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 用户ID
             */
            id: number;
            /**
             * 头像，可能为空
             */
            avatar_url: string;
            /**
             * 用户昵称
             */
            name: string;
            /**
             * 用户名
             */
            username: string;
            /**
             * 邮箱
             */
            email: string;
            phone: string;
            /**
             * 个性签名
             */
            tagline: string;
            /**
             * 个人简介
             */
            bio: string;
            /**
             * 个人主页
             */
            url: string;
            /**
             * 所在位置
             */
            location: string;
            /**
             * 公司
             */
            company: string;
            /**
             * 公司职称
             */
            company_title: string;
            /**
             * 兴趣标签
             */
            interests: Array<string>;
            /**
             * 社交账号
             */
            socials: Array<string>;
            options: {
                /**
                 * 默认语言
                 */
                language: string;
                /**
                 * 是否显示原始图片
                 */
                show_original_photos: boolean;
                /**
                 * 复制链接时对URL进行编码
                 */
                encode_copied_url: string;
                /**
                 * 选择图片后立刻上传
                 */
                auto_upload_after_select: string;
                /**
                 * 上传按钮点击动作
                 */
                upload_button_action: string;
            };
            /**
             * 是否为管理员
             */
            is_admin: boolean;
            country_code: string;
            /**
             * 最后登录ip
             */
            login_ip: string;
            /**
             * 邮箱验证时间，为null表示未验证
             */
            email_verified_at: string;
            phone_verified_at: unknown;
            /**
             * 注册时间
             */
            created_at: string;
            /**
             * 购买角色组数量
             */
            group_count: number;
            /**
             * 购买容量数量
             */
            capacity_count: number;
            /**
             * 订单数量
             */
            order_count: number;
            /**
             * 分享数量
             */
            share_count: number;
            /**
             * 工单数量
             */
            ticket_count: number;
            /**
             * 图片数量
             */
            photo_count: number;
            /**
             * 相册数量
             */
            album_count: number;
            used_storage: number;
            /**
             * 总储存(kb)
             */
            total_storage: number;
        };
        time: number;
    };
};

export type GetUserProfileResponse = GetUserProfileResponses[keyof GetUserProfileResponses];

export type PostUserProfileData = {
    body?: {
        /**
         * 用户头像
         */
        avatar?: Blob | File;
        /**
         * 昵称
         */
        name?: string;
        /**
         * 用户名
         */
        username?: string;
        /**
         * 个性签名
         */
        tagline?: string;
        /**
         * 个人简介
         */
        bio?: string;
        /**
         * 个人链接
         */
        url?: string;
        /**
         * 公司
         */
        company?: string;
        /**
         * 公司职称
         */
        company_title?: string;
        /**
         * 所在位置
         */
        location?: string;
        /**
         * 兴趣爱好
         */
        'interests[]'?: Array<string>;
        /**
         * 社交账号
         */
        'socials[]'?: Array<string>;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/profile';
};

export type PostUserProfileResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 用户ID
             */
            id: number;
            /**
             * 头像，可能为空
             */
            avatar: string;
            /**
             * 用户昵称
             */
            name: string;
            /**
             * 用户名
             */
            username: string;
            /**
             * 邮箱
             */
            email: string;
            phone: unknown;
            /**
             * 位置
             */
            location: string;
            /**
             * 个人签名
             */
            bio: string;
            /**
             * 兴趣标签
             */
            interests: Array<string>;
            socials: Array<string>;
            country_code: unknown;
            /**
             * 最后登录ip
             */
            login_ip: string;
            /**
             * 邮箱验证时间，为null表示未验证
             */
            email_verified_at: string;
            phone_verified_at: unknown;
            /**
             * 注册时间
             */
            created_at: string;
            /**
             * 购买角色组数量
             */
            group_count: number;
            /**
             * 购买容量数量
             */
            capacity_count: number;
            /**
             * 订单数量
             */
            order_count: number;
            /**
             * 分享数量
             */
            share_count: number;
            /**
             * 工单数量
             */
            ticket_count: number;
            /**
             * 图片数量
             */
            photo_count: number;
            /**
             * 相册数量
             */
            album_count: number;
            /**
             * 已使用储存(kb)
             */
            used_storage: number;
            /**
             * 总储存(kb)
             */
            total_storage: number;
        };
        time: number;
    };
};

export type PostUserProfileResponse = PostUserProfileResponses[keyof PostUserProfileResponses];

export type PostUserSettingData = {
    body?: {
        /**
         * 系统语言
         */
        language?: string;
        show_original_photos?: boolean;
        encode_copied_url?: boolean;
        auto_upload_after_select?: boolean;
        /**
         * 上传动作
         */
        upload_button_action?: string;
        /**
         * 默认储存ID
         */
        default_storage_id?: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/setting';
};

export type PostUserSettingResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostUserSettingResponse = PostUserSettingResponses[keyof PostUserSettingResponses];

export type PostUserBindPhoneData = {
    body?: {
        /**
         * 手机号
         */
        phone: string;
        /**
         * 国家
         */
        country_code: string;
        /**
         * 短信验证码
         */
        code: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/bind_phone';
};

export type PostUserBindPhoneResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostUserBindPhoneResponse = PostUserBindPhoneResponses[keyof PostUserBindPhoneResponses];

export type PostUserBindEmailData = {
    body?: {
        /**
         * 邮箱
         */
        email: string;
        /**
         * 邮件验证码
         */
        code: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/bind_email';
};

export type PostUserBindEmailResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostUserBindEmailResponse = PostUserBindEmailResponses[keyof PostUserBindEmailResponses];

export type GetExplorePhotosData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/explore/photos';
};

export type GetExplorePhotosResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 图片ID
                 */
                id: number;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                /**
                 * 拓展名
                 */
                extension: string;
                /**
                 * 宽度
                 */
                width: number;
                /**
                 * 高度
                 */
                height: number;
                /**
                 * 当前用户是否点赞了
                 */
                is_liked: boolean;
                /**
                 * 缩略图链接
                 */
                thumbnail_url: string;
                /**
                 * 图片链接
                 */
                public_url: string;
                /**
                 * 标签
                 */
                tags: Array<{
                    /**
                     * 标签ID
                     */
                    id: number;
                    /**
                     * 标签名称
                     */
                    name: string;
                }>;
                /**
                 * 用户信息
                 */
                user: {
                    /**
                     * 用户ID
                     */
                    id: number;
                    /**
                     * 用户昵称
                     */
                    name: string;
                    /**
                     * 用户名
                     */
                    username: string;
                    /**
                     * 是否为系统管理员
                     */
                    is_admin: boolean;
                    /**
                     * 用户头像，可能为空
                     */
                    avatar_url: string;
                };
                /**
                 * 大小
                 */
                size: string;
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetExplorePhotosResponse = GetExplorePhotosResponses[keyof GetExplorePhotosResponses];

export type PostExplorePhotosByIdReportData = {
    body?: ReportContent;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/photos/{id}/report';
};

export type PostExplorePhotosByIdReportResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostExplorePhotosByIdReportResponse = PostExplorePhotosByIdReportResponses[keyof PostExplorePhotosByIdReportResponses];

export type PostExplorePhotosByIdLikeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/photos/{id}/like';
};

export type PostExplorePhotosByIdLikeResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostExplorePhotosByIdLikeResponse = PostExplorePhotosByIdLikeResponses[keyof PostExplorePhotosByIdLikeResponses];

export type DeleteExplorePhotosByIdUnlikeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/photos/{id}/unlike';
};

export type DeleteExplorePhotosByIdUnlikeResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteExplorePhotosByIdUnlikeResponse = DeleteExplorePhotosByIdUnlikeResponses[keyof DeleteExplorePhotosByIdUnlikeResponses];

export type PostExploreUsersByUsernameReportData = {
    body?: ReportContent;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 用户名
         */
        username: string;
    };
    query?: never;
    url: '/explore/users/{username}/report';
};

export type PostExploreUsersByUsernameReportResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostExploreUsersByUsernameReportResponse = PostExploreUsersByUsernameReportResponses[keyof PostExploreUsersByUsernameReportResponses];

export type GetExploreUsersByUsernamePhotosData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 用户名
         */
        username: string;
    };
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/explore/users/{username}/photos';
};

export type GetExploreUsersByUsernamePhotosResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 图片ID
                 */
                id: number;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                /**
                 * 拓展名
                 */
                extension: string;
                /**
                 * 宽度
                 */
                width: number;
                /**
                 * 高度
                 */
                height: number;
                /**
                 * 当前用户是否点赞了
                 */
                is_liked: boolean;
                /**
                 * 缩略图链接
                 */
                thumbnail_url: string;
                /**
                 * 图片链接
                 */
                public_url: string;
                /**
                 * 标签
                 */
                tags: Array<{
                    /**
                     * 标签ID
                     */
                    id: number;
                    /**
                     * 标签名称
                     */
                    name: string;
                }>;
                /**
                 * 用户信息
                 */
                user: {
                    /**
                     * 用户ID
                     */
                    id: number;
                    /**
                     * 用户昵称
                     */
                    name: string;
                    /**
                     * 用户名
                     */
                    username: string;
                    /**
                     * 是否为系统管理员
                     */
                    is_admin: boolean;
                    /**
                     * 用户头像，可能为空
                     */
                    avatar_url: string;
                };
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetExploreUsersByUsernamePhotosResponse = GetExploreUsersByUsernamePhotosResponses[keyof GetExploreUsersByUsernamePhotosResponses];

export type GetExploreUsersByUsernameData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 用户名
         */
        username: string;
    };
    query?: never;
    url: '/explore/users/{username}';
};

export type GetExploreUsersByUsernameResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 用户ID
             */
            id: number;
            avatar_url: string;
            /**
             * 昵称
             */
            name: string;
            /**
             * 用户名
             */
            username: string;
            /**
             * 位置
             */
            location: string;
            /**
             * 个性签名
             */
            bio: string;
            /**
             * 兴趣爱好
             */
            interests: Array<string>;
            socials: Array<string>;
            /**
             * 是否为系统管理员
             */
            is_admin: boolean;
            /**
             * 注册时间
             */
            created_at: string;
            /**
             * 创建的图片数量
             */
            photo_count: number;
            /**
             * 创建的相册数量
             */
            album_count: number;
            /**
             * 喜欢的图片数量
             */
            liked_photo_count: number;
            /**
             * 喜欢的相册数量
             */
            liked_album_count: number;
        };
        time: number;
    };
};

export type GetExploreUsersByUsernameResponse = GetExploreUsersByUsernameResponses[keyof GetExploreUsersByUsernameResponses];

export type GetExploreUsersByUsernameAlbumsData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 用户名
         */
        username: string;
    };
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/explore/users/{username}/albums';
};

export type GetExploreUsersByUsernameAlbumsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 相册ID
                 */
                id: number;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                /**
                 * 创建时间
                 */
                created_at: string;
                /**
                 * 图片数量
                 */
                photo_count: number;
                /**
                 * 当前用户是否点赞了
                 */
                is_liked: boolean;
                /**
                 * 封面图片，最多三张
                 */
                covers: Array<string>;
                /**
                 * 标签
                 */
                tags: Array<string>;
                /**
                 * 用户信息
                 */
                user: {
                    /**
                     * 用户ID
                     */
                    id: number;
                    /**
                     * 用户昵称
                     */
                    name: string;
                    /**
                     * 用户名
                     */
                    username: string;
                    /**
                     * 是否为系统管理员
                     */
                    is_admin: boolean;
                    /**
                     * 用户头像，可能为空
                     */
                    avatar_url: string;
                };
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetExploreUsersByUsernameAlbumsResponse = GetExploreUsersByUsernameAlbumsResponses[keyof GetExploreUsersByUsernameAlbumsResponses];

export type GetExploreAlbumsData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/explore/albums';
};

export type GetExploreAlbumsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 相册ID
                 */
                id: number;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                /**
                 * 创建时间
                 */
                created_at: string;
                /**
                 * 图片数量
                 */
                photo_count: number;
                /**
                 * 当前用户是否点赞了
                 */
                is_liked: boolean;
                /**
                 * 封面图片，最多三张
                 */
                covers: Array<string>;
                /**
                 * 标签
                 */
                tags: Array<string>;
                /**
                 * 用户信息
                 */
                user: {
                    /**
                     * 用户ID
                     */
                    id: number;
                    /**
                     * 用户昵称
                     */
                    name: string;
                    /**
                     * 用户名
                     */
                    username: string;
                    /**
                     * 是否为系统管理员
                     */
                    is_admin: boolean;
                    /**
                     * 用户头像，可能为空
                     */
                    avatar_url: string;
                };
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetExploreAlbumsResponse = GetExploreAlbumsResponses[keyof GetExploreAlbumsResponses];

export type GetExploreAlbumsByIdPhotosData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/explore/albums/{id}/photos';
};

export type GetExploreAlbumsByIdPhotosResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                /**
                 * 图片ID
                 */
                id?: number;
                /**
                 * 名称
                 */
                name?: string;
                /**
                 * 简介
                 */
                intro?: string;
                /**
                 * 拓展名
                 */
                extension?: string;
                /**
                 * 大小
                 */
                size?: number;
                /**
                 * 宽度
                 */
                width?: number;
                /**
                 * 高度
                 */
                height?: number;
                /**
                 * 当前用户是否点赞了
                 */
                is_liked?: boolean;
                /**
                 * 缩略图链接
                 */
                thumbnail_url?: string;
                /**
                 * 图片链接
                 */
                public_url?: string;
                /**
                 * 标签
                 */
                tags?: Array<string>;
                /**
                 * 用户信息
                 */
                user?: {
                    /**
                     * 用户ID
                     */
                    id: number;
                    /**
                     * 用户昵称
                     */
                    name: string;
                    /**
                     * 用户名
                     */
                    username: string;
                    /**
                     * 是否为系统管理员
                     */
                    is_admin: boolean;
                    /**
                     * 用户头像，可能为空
                     */
                    avatar_url: string;
                };
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: unknown;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
        };
        time: number;
    };
};

export type GetExploreAlbumsByIdPhotosResponse = GetExploreAlbumsByIdPhotosResponses[keyof GetExploreAlbumsByIdPhotosResponses];

export type PostExploreAlbumsByIdReportData = {
    body?: ReportContent;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/albums/{id}/report';
};

export type PostExploreAlbumsByIdReportResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostExploreAlbumsByIdReportResponse = PostExploreAlbumsByIdReportResponses[keyof PostExploreAlbumsByIdReportResponses];

export type PostExploreAlbumsByIdLikeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/albums/{id}/like';
};

export type PostExploreAlbumsByIdLikeResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostExploreAlbumsByIdLikeResponse = PostExploreAlbumsByIdLikeResponses[keyof PostExploreAlbumsByIdLikeResponses];

export type DeleteExploreAlbumsByIdUnlikeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/albums/{id}/unlike';
};

export type DeleteExploreAlbumsByIdUnlikeResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteExploreAlbumsByIdUnlikeResponse = DeleteExploreAlbumsByIdUnlikeResponses[keyof DeleteExploreAlbumsByIdUnlikeResponses];

export type GetExplorePhotosByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 图片ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/photos/{id}';
};

export type GetExplorePhotosByIdResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 图片ID
             */
            id: number;
            /**
             * 名称
             */
            name: string;
            /**
             * 简介
             */
            intro: string;
            /**
             * 拓展名
             */
            extension: string;
            /**
             * 宽度
             */
            width: number;
            /**
             * 高度
             */
            height: number;
            /**
             * 当前用户是否点赞了
             */
            is_liked: boolean;
            /**
             * 缩略图链接
             */
            thumbnail_url: string;
            /**
             * 图片链接
             */
            public_url: string;
            /**
             * 标签
             */
            tags: Array<{
                /**
                 * 标签ID
                 */
                id: number;
                /**
                 * 标签名称
                 */
                name: string;
            }>;
            /**
             * 用户信息
             */
            user: {
                /**
                 * 用户ID
                 */
                id: number;
                /**
                 * 用户昵称
                 */
                name: string;
                /**
                 * 用户名
                 */
                username: string;
                /**
                 * 是否为管理员
                 */
                is_admin: boolean;
                /**
                 * 头像地址
                 */
                avatar_url: string;
            };
        };
        time: number;
    };
};

export type GetExplorePhotosByIdResponse = GetExplorePhotosByIdResponses[keyof GetExplorePhotosByIdResponses];

export type GetExploreAlbumsByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * 相册ID
         */
        id: number;
    };
    query?: never;
    url: '/explore/albums/{id}';
};

export type GetExploreAlbumsByIdResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 相册ID
             */
            id: number;
            /**
             * 名称
             */
            name: string;
            /**
             * 简介
             */
            intro: string;
            /**
             * 创建时间
             */
            created_at: string;
            /**
             * 图片数量
             */
            photo_count: number;
            is_liked: boolean;
            /**
             * 封面图片，最多三张
             */
            covers: Array<string>;
            /**
             * 标签
             */
            tags: Array<string>;
            /**
             * 用户信息
             */
            user: {
                /**
                 * 用户ID
                 */
                id: number;
                /**
                 * 用户昵称
                 */
                name: string;
                /**
                 * 用户名
                 */
                username: string;
                /**
                 * 是否为管理员
                 */
                is_admin: boolean;
                /**
                 * 头像地址
                 */
                avatar_url: string;
            };
        };
        time: number;
    };
};

export type GetExploreAlbumsByIdResponse = GetExploreAlbumsByIdResponses[keyof GetExploreAlbumsByIdResponses];

export type GetPlansData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
    };
    url: '/plans';
};

export type GetPlansResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * 套餐ID
                 */
                id: number;
                /**
                 * 套餐类型
                 */
                type: 'vip' | 'storage';
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 简介
                 */
                intro: string;
                /**
                 * 权益
                 */
                features: Array<string>;
                /**
                 * 角标内容
                 */
                badge: string;
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetPlansResponse = GetPlansResponses[keyof GetPlansResponses];

export type GetPlansByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 套餐ID
         */
        id: number;
    };
    query?: never;
    url: '/plans/{id}';
};

export type GetPlansByIdResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 套餐ID
             */
            id: number;
            /**
             * 套餐类型
             */
            type: 'vip' | 'storage';
            /**
             * 名称
             */
            name: string;
            /**
             * 简介
             */
            intro: string;
            /**
             * 权益列表
             */
            features: Array<string>;
            /**
             * 角标内容
             */
            badge: string;
            /**
             * 价格列表
             */
            prices: Array<{
                /**
                 * 价格ID
                 */
                id: number;
                /**
                 * 名称
                 */
                name: string;
                /**
                 * 时长(秒)
                 */
                duration: number;
                /**
                 * 价格(分)
                 */
                price: number;
            }>;
        };
        time: number;
    };
};

export type GetPlansByIdResponse = GetPlansByIdResponses[keyof GetPlansByIdResponses];

export type GetPagesData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
    };
    url: '/pages';
};

export type GetPagesResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * 页面ID
                 */
                id: number;
                /**
                 * 页面类型
                 */
                type: string;
                /**
                 * 页面名称
                 */
                name: string;
                /**
                 * 页面图标，默认支持的图标：https://fontawesome.com/v5/search?m=free
                 */
                icon: string;
                /**
                 * 页面标题
                 */
                title: string;
                /**
                 * slug
                 */
                slug: string;
                /**
                 * 跳转url，type=external时有效
                 */
                url: string;
                /**
                 * 浏览次数
                 */
                view_count: number;
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetPagesResponse = GetPagesResponses[keyof GetPagesResponses];

export type GetPagesBySlugData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        /**
         * slug
         */
        slug: string;
    };
    query?: never;
    url: '/pages/{slug}';
};

export type GetPagesBySlugResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 页面ID
             */
            id: number;
            /**
             * 页面类型
             */
            type: string;
            /**
             * 页面名称
             */
            name: string;
            /**
             * 页面图标，默认支持的图标：https://fontawesome.com/v5/search?m=free
             */
            icon: string;
            /**
             * 页面标题
             */
            title: string;
            /**
             * 内容
             */
            content: string;
            /**
             * slug
             */
            slug: string;
            /**
             * 跳转url，type=external时有效
             */
            url: string;
            /**
             * 浏览次数
             */
            view_count: number;
            /**
             * 创建时间
             */
            created_at: string;
        };
        time: number;
    };
};

export type GetPagesBySlugResponse = GetPagesBySlugResponses[keyof GetPagesBySlugResponses];

export type GetSharesBySlugData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        slug: string;
    };
    query?: {
        /**
         * 密码
         */
        password?: string;
    };
    url: '/shares/{slug}';
};

export type GetSharesBySlugErrors = {
    404: {
        status: string;
        message: string;
        time: number;
    };
};

export type GetSharesBySlugError = GetSharesBySlugErrors[keyof GetSharesBySlugErrors];

export type GetSharesBySlugResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 图片ID
             */
            id: number;
            /**
             * 分享类型
             */
            type: string;
            slug: string;
            /**
             * 分享内容
             */
            content: string;
            /**
             * 浏览次数
             */
            view_count: number;
            /**
             * 到期时间
             */
            expired_at: string;
            /**
             * 创建时间
             */
            created_at: string;
            /**
             * 点赞数量
             */
            like_count: number;
            /**
             * 当前用户是否点赞了
             */
            is_liked: boolean;
            /**
             * 是否已验证通过
             */
            is_valid: boolean;
            user: {
                id: number;
                name: string;
                username: string;
                is_admin: boolean;
                avatar_url: string;
            };
        };
        time: number;
    };
};

export type GetSharesBySlugResponse = GetSharesBySlugResponses[keyof GetSharesBySlugResponses];

export type GetSharesBySlugPhotosData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path: {
        slug: string;
    };
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
        /**
         * 密码
         */
        password?: string;
    };
    url: '/shares/{slug}/photos';
};

export type GetSharesBySlugPhotosErrors = {
    403: {
        status: string;
        message: string;
        time: number;
    };
    404: {
        status: string;
        message: string;
        time: number;
    };
};

export type GetSharesBySlugPhotosError = GetSharesBySlugPhotosErrors[keyof GetSharesBySlugPhotosErrors];

export type GetSharesBySlugPhotosResponses = {
    200: {
        status: string;
        message: string;
        data: {
            data: Array<{
                id: number;
                name: string;
                intro: string;
                extension: string;
                size: number;
                width: number;
                height: number;
                is_liked: boolean;
                thumbnail_url: string;
                public_url: string;
                tags: Array<string>;
                user: {
                    id: number;
                    name: string;
                    username: string;
                    is_admin: boolean;
                    avatar_url: string;
                };
            }>;
            links: {
                first: string;
                last: string;
                prev: unknown;
                next: string;
            };
            meta: {
                current_page: number;
                from: number;
                last_page: number;
                links: Array<{
                    url: string | null;
                    label: string;
                    active: boolean;
                }>;
                path: string;
                per_page: number;
                to: number;
                total: number;
            };
            is_valid: boolean;
        };
        time: number;
    };
};

export type GetSharesBySlugPhotosResponse = GetSharesBySlugPhotosResponses[keyof GetSharesBySlugPhotosResponses];

export type PostSharesBySlugReportData = {
    body?: ReportContent;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        slug: string;
    };
    query: {
        /**
         * 密码
         */
        password: string;
    };
    url: '/shares/{slug}/report';
};

export type PostSharesBySlugReportResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostSharesBySlugReportResponse = PostSharesBySlugReportResponses[keyof PostSharesBySlugReportResponses];

export type PostSharesBySlugLikeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        slug: string;
    };
    query: {
        /**
         * 密码
         */
        password: string;
    };
    url: '/shares/{slug}/like';
};

export type PostSharesBySlugLikeResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostSharesBySlugLikeResponse = PostSharesBySlugLikeResponses[keyof PostSharesBySlugLikeResponses];

export type DeleteSharesBySlugUnlikeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        slug: string;
    };
    query: {
        /**
         * 密码
         */
        password: string;
    };
    url: '/shares/{slug}/unlike';
};

export type DeleteSharesBySlugUnlikeResponses = {
    204: {
        [key: string]: unknown;
    };
};

export type DeleteSharesBySlugUnlikeResponse = DeleteSharesBySlugUnlikeResponses[keyof DeleteSharesBySlugUnlikeResponses];

export type GetNoticesData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: {
        /**
         * 页码
         */
        page?: number;
        /**
         * 每页展示数量
         */
        per_page?: number;
        /**
         * 筛选关键字
         */
        q?: string;
    };
    url: '/notices';
};

export type GetNoticesResponses = {
    200: {
        status: string;
        message: string;
        data: {
            current_page: number;
            data: Array<{
                /**
                 * 公告ID
                 */
                id?: number;
                /**
                 * 标题
                 */
                title?: string;
                /**
                 * 内容，超出300个字符后以省略号结尾
                 */
                content?: string;
                /**
                 * 创建时间
                 */
                created_at?: string;
            }>;
            first_page_url: string;
            from: number;
            last_page: number;
            last_page_url: string;
            links: Array<{
                url: string | null;
                label: string;
                active: boolean;
            }>;
            next_page_url: unknown;
            path: string;
            per_page: number;
            prev_page_url: unknown;
            to: number;
            total: number;
        };
        time: number;
    };
};

export type GetNoticesResponse = GetNoticesResponses[keyof GetNoticesResponses];

export type GetNoticesByIdData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 公告ID
         */
        id: number;
    };
    query?: never;
    url: '/notices/{id}';
};

export type GetNoticesByIdResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 公告ID
             */
            id: number;
            /**
             * 标题
             */
            title: string;
            /**
             * 内容(markdown)
             */
            content: string;
            /**
             * 创建时间
             */
            created_at: string;
        };
        time: number;
    };
};

export type GetNoticesByIdResponse = GetNoticesByIdResponses[keyof GetNoticesByIdResponses];

export type GetChangelogData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/changelog';
};

export type GetChangelogResponses = {
    200: {
        status: string;
        message: string;
        data: {
            content: string;
        };
        time: number;
    };
};

export type GetChangelogResponse = GetChangelogResponses[keyof GetChangelogResponses];

export type GetLicenseData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/license';
};

export type GetLicenseResponses = {
    200: {
        status: string;
        message: string;
        data: {
            content: string;
        };
        time: number;
    };
};

export type GetLicenseResponse = GetLicenseResponses[keyof GetLicenseResponses];

export type GetCheckInstallationData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/check-installation';
};

export type GetCheckInstallationResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 是否安装了
             */
            installed: boolean;
        };
        time: number;
    };
};

export type GetCheckInstallationResponse = GetCheckInstallationResponses[keyof GetCheckInstallationResponses];

export type PostInstallData = {
    body?: {
        /**
         * 应用名称
         */
        app_name: string;
        /**
         * 应用url
         */
        app_url: string;
        /**
         * 许可证编号
         */
        app_serial_no: string;
        /**
         * 许可证密钥
         */
        app_secret: string;
        /**
         * 数据库驱动
         */
        db_connection: 'sqlite' | 'mysql' | 'mariadb' | 'pgsql' | 'sqlsrv';
        /**
         * 数据库连接地址
         */
        db_host?: string;
        /**
         * 数据库连接端口
         */
        db_port?: string;
        /**
         * 数据库名称
         */
        db_database?: string;
        /**
         * 数据库用户名
         */
        db_username?: string;
        /**
         * 数据库密码
         */
        db_password?: string;
        /**
         * 管理员用户名
         */
        admin_username: string;
        /**
         * 管理员邮箱
         */
        admin_email: string;
        /**
         * 管理员密码
         */
        admin_password: string;
        /**
         * 确认密码
         */
        admin_password_confirmation: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/install';
};

export type PostInstallResponses = {
    201: {
        status: string;
        message: string;
        data: {
            content: string;
        };
        time: number;
    };
};

export type PostInstallResponse = PostInstallResponses[keyof PostInstallResponses];

export type GetConfigsData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/configs';
};

export type GetConfigsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            app: {
                /**
                 * App 名称
                 */
                name: string;
                /**
                 * 应用网址(接口服务地址)
                 */
                url: string;
                /**
                 * 系统货币
                 */
                currency: string;
                /**
                 * 备案号
                 */
                icp_no: string;
                /**
                 * 是否开启注册
                 */
                enable_registration: boolean;
                /**
                 * 是否允许游客上传
                 */
                guest_upload: boolean;
                /**
                 * 用户是否需要验证邮箱
                 */
                user_email_verify: boolean;
                /**
                 * 用户是否需要验证手机号
                 */
                user_phone_verify: boolean;
                /**
                 * 是否启用站点
                 */
                enable_site: boolean;
                /**
                 * 是否启用广场
                 */
                enable_explore: boolean;
                /**
                 * 系统时间戳
                 */
                timestamp: number;
                /**
                 * 是否已登录
                 */
                is_logged_in: boolean;
                /**
                 * 图片数量
                 */
                photo_count: number;
                /**
                 * 图片占用储存
                 */
                photo_size: number;
                /**
                 * 支持的国家
                 */
                countries: Array<{
                    id: string;
                    name: string;
                    code: number;
                }>;
                /**
                 * 社会化登录
                 */
                socialites: Array<{
                    id: number;
                    name: string;
                    intro: string;
                    provider: string;
                }>;
            };
            site: {
                /**
                 * 站点标题
                 */
                title: string;
                /**
                 * 站点副标题
                 */
                subtitle: string;
                /**
                 * 首页标题
                 */
                homepage_title: string;
                /**
                 * 首页描述
                 */
                homepage_description: string;
                notice: string | null;
                homepage_background_image_url: string;
                /**
                 * 首页背景图
                 */
                homepage_background_images: Array<string>;
                auth_page_background_image_url: string;
                /**
                 * 权限认证背景图
                 */
                auth_page_background_images: Array<string>;
                /**
                 * 自定义css
                 */
                custom_css: string;
                /**
                 * 自定义js
                 */
                custom_js: string;
            };
        };
        time: number;
    };
};

export type GetConfigsResponse = GetConfigsResponses[keyof GetConfigsResponses];

export type GetGroupData = {
    body?: never;
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/group';
};

export type GetGroupResponses = {
    200: {
        status: string;
        message: string;
        data: {
            group: {
                id: number;
                name: string;
                intro: string;
                is_default: boolean;
                is_guest: boolean;
                options: {
                    max_upload_size: number;
                    file_expire_seconds: number;
                    limit_concurrent_upload: number;
                    limit_per_minute: number;
                    limit_per_hour: number;
                    limit_per_day: number;
                    limit_per_week: number;
                    limit_per_month: number;
                    allow_file_types: Array<string>;
                };
            };
            /**
             * 支持的储存信息
             */
            storages: Array<{
                /**
                 * 储存ID
                 */
                id?: number;
                /**
                 * 名称
                 */
                name?: string;
                /**
                 * 简介
                 */
                intro?: string;
                /**
                 * 储存提供者
                 */
                provider?: string;
            }>;
            /**
             * 支付驱动
             */
            payments: Array<{
                /**
                 * 驱动ID
                 */
                id?: number;
                /**
                 * 名称
                 */
                name?: string;
                /**
                 * 简介
                 */
                intro?: string;
                /**
                 * 支付平台
                 */
                platform: string;
                /**
                 * 支付通道
                 */
                channels: Array<string>;
                /**
                 * 支付方法
                 */
                methods: Array<string>;
            }>;
        };
        time: number;
    };
};

export type GetGroupResponse = GetGroupResponses[keyof GetGroupResponses];

export type PostUploadData = {
    body?: {
        /**
         * 二进制图片文件
         */
        file: Blob | File;
        /**
         * 储存ID
         */
        storage_id: number;
        /**
         * 相册，登录用户有效
         */
        album_id?: number;
        /**
         * 到期时间(yyyy-MM-dd HH:mm:ss)
         */
        expired_at?: string;
        /**
         * 标签，登录用户有效
         */
        'tags[]'?: Array<string>;
        /**
         * 是否公开图片，默认 false，登录用户有效
         */
        is_public?: boolean;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/upload';
};

export type PostUploadErrors = {
    422: {
        status: string;
        message: string;
        data: {
            errors: {
                file: Array<string>;
                expired_at: Array<string>;
                tags: Array<string>;
                is_public: Array<string>;
            };
        };
        time: number;
    };
    429: {
        status: string;
        message: string;
        data: unknown;
        time: number;
    };
};

export type PostUploadError = PostUploadErrors[keyof PostUploadErrors];

export type PostUploadResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * 图片ID
             */
            id: number;
            /**
             * 图片名称(不含拓展名)
             */
            name: string;
            /**
             * 文件名称
             */
            filename: string;
            /**
             * 物理路径
             */
            pathname: string;
            /**
             * 文件类型
             */
            mimetype: string;
            /**
             * 拓展名
             */
            extension: string;
            /**
             * md5值
             */
            md5: string;
            /**
             * sha1值
             */
            sha1: string;
            /**
             * 上传ip地址
             */
            ip_address: string;
            /**
             * 图片访问地址
             */
            public_url: string;
            /**
             * 宽度
             */
            width: number;
            /**
             * 高度
             */
            height: number;
        };
        time: number;
    };
};

export type PostUploadResponse = PostUploadResponses[keyof PostUploadResponses];

export type PostFeedbackData = {
    body?: {
        /**
         * 类型
         */
        type: 'general' | 'dmca';
        /**
         * 标题
         */
        title: string;
        /**
         * 姓名
         */
        name: string;
        /**
         * 邮箱
         */
        email: string;
        /**
         * 反馈内容
         */
        content: string;
    };
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/feedback';
};

export type PostFeedbackResponses = {
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostFeedbackResponse = PostFeedbackResponses[keyof PostFeedbackResponses];

export type PostSmsSendData = {
    body?: {
        /**
         * 事件
         */
        event: 'register' | 'bind' | 'forget_password' | 'verify';
        /**
         * 手机号
         */
        phone: string;
        /**
         * 国家
         */
        country_code: string;
        /**
         * 图形验证码
         */
        captcha: string;
        /**
         * 图形验证码key
         */
        captcha_key: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/sms/send';
};

export type PostSmsSendResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostSmsSendResponse = PostSmsSendResponses[keyof PostSmsSendResponses];

export type PostMailSendData = {
    body?: {
        /**
         * 事件
         */
        event: 'register' | 'bind' | 'forget_password' | 'verify';
        /**
         * 手机号
         */
        email: string;
        /**
         * 图形验证码
         */
        captcha: string;
        /**
         * 图形验证码key
         */
        captcha_key: string;
    };
    headers?: {
        Accept?: string;
    };
    path?: never;
    query?: never;
    url: '/mail/send';
};

export type PostMailSendResponses = {
    200: {
        status: string;
        message: string;
        time: number;
    };
    201: {
        status: string;
        message: string;
        time: number;
    };
};

export type PostMailSendResponse = PostMailSendResponses[keyof PostMailSendResponses];

export type GetQrcodeData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query: {
        /**
         * 二维码内容
         */
        content: string;
        /**
         * 大小
         */
        size?: number;
    };
    url: '/qrcode';
};

export type GetQrcodeResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type GetQrcodeResponse = GetQrcodeResponses[keyof GetQrcodeResponses];

export type GetCaptchaData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/captcha';
};

export type GetCaptchaResponses = {
    200: {
        [key: string]: unknown;
    };
};

export type GetCaptchaResponse = GetCaptchaResponses[keyof GetCaptchaResponses];

export type GetUserTokensPermissionsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/user/tokens/permissions';
};

export type GetUserTokensPermissionsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            /**
             * token名称
             */
            token_name: string;
            /**
             * 权限列表，如果只有一个元素“*”表示拥有所有权限
             */
            abilities: Array<string>;
            /**
             * 最后使用时间
             */
            last_used_at: string;
            /**
             * 到期时间，可能为null
             */
            expires_at: unknown;
        };
        time: number;
    };
};

export type GetUserTokensPermissionsResponse = GetUserTokensPermissionsResponses[keyof GetUserTokensPermissionsResponses];

export type GetTokenPermissionsData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path?: never;
    query?: never;
    url: '/token_permissions';
};

export type GetTokenPermissionsResponses = {
    200: {
        status: string;
        message: string;
        data: {
            permissions: Array<{
                value: string;
                label: string;
                detail: string;
                category: string;
            }>;
            groups: {
                user: {
                    用户资料: Array<string>;
                    访问令牌: Array<string>;
                    角色组: Array<string>;
                    存储容量: Array<string>;
                };
                content: {
                    相册管理: Array<string>;
                    照片管理: Array<string>;
                    内容分享: Array<string>;
                    内容上传: Array<string>;
                };
                service: {
                    工单服务: Array<string>;
                    订单管理: Array<string>;
                };
                integration: {
                    OAuth集成: Array<string>;
                    内容探索: Array<string>;
                };
                basic: {
                    基础功能: Array<string>;
                };
            };
        };
        time: number;
    };
};

export type GetTokenPermissionsResponse = GetTokenPermissionsResponses[keyof GetTokenPermissionsResponses];

export type GetStatByKeyData = {
    body?: never;
    headers?: {
        Accept?: string;
        Authorization?: string;
    };
    path: {
        /**
         * 访问key，若后台未设置则可为空
         */
        key: string;
    };
    query?: never;
    url: '/stat/{key}';
};

export type GetStatByKeyResponses = {
    200: {
        status: string;
        message: string;
        data: {
            basic: {
                /**
                 * 图片数量
                 */
                photo_count: number;
                /**
                 * 相册数量
                 */
                album_count: number;
                /**
                 * 用户数量
                 */
                user_count: number;
                /**
                 * 分享数量
                 */
                share_count: number;
                /**
                 * 今日图片数量
                 */
                today_photo_count: number;
                /**
                 * 今日相册数量
                 */
                today_album_count: number;
                /**
                 * 今日用户数量
                 */
                today_user_count: number;
                /**
                 * 今日分享数量
                 */
                today_share_count: number;
            };
            orders: {
                /**
                 * 总订单额
                 */
                total_amount: number;
                /**
                 * 今日订单额
                 */
                today_amount: number;
                /**
                 * 昨日订单额
                 */
                yesterday_amount: number;
                /**
                 * 本周订单额
                 */
                week_amount: number;
                /**
                 * 本月订单额
                 */
                month_amount: number;
            };
            system: {
                /**
                 * 操作系统
                 */
                os: string;
                /**
                 * 运行环境
                 */
                environment: string;
                /**
                 * php 版本
                 */
                php_version: string;
                /**
                 * 最大内存限制
                 */
                memory_limit: string;
                /**
                 * 最大上传文件大小
                 */
                max_upload_filesize: string;
                /**
                 * 最大 POST 数据
                 */
                max_post_size: string;
                /**
                 * 软件版本号
                 */
                software_version: string;
            };
        };
        time: number;
    };
};

export type GetStatByKeyResponse = GetStatByKeyResponses[keyof GetStatByKeyResponses];

export type ClientOptions = {
    baseURL: string;
};
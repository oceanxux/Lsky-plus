// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer, urlSearchParamsBodySerializer } from '@hey-api/client-axios';
import type { GetApiV1AlbumsData, GetApiV1AlbumsResponses, DeleteApiV1AlbumsByIdData, DeleteApiV1AlbumsByIdResponses, PostApiV1UploadData, PostApiV1UploadResponses, GetApiV1ImagesData, GetApiV1ImagesResponses, DeleteApiV1ImagesByKeyData, DeleteApiV1ImagesByKeyResponses, PostApiV1ImagesTokensData, PostApiV1ImagesTokensResponses, GetApiV1StrategiesData, GetApiV1StrategiesResponses, GetApiV1ProfileData, GetApiV1ProfileResponses, GetOauthByIdRedirectData, GetOauthByIdRedirectResponses, PostOauthByIdLoginData, PostOauthByIdLoginResponses, PostOauthByIdBindData, PostOauthByIdBindResponses, DeleteOauthByIdUnbindData, DeleteOauthByIdUnbindResponses, GetOauthBindsData, GetOauthBindsResponses, PostLoginData, PostLoginResponses, PostLoginErrors, PostLogoutData, PostLogoutResponses, PostRegisterData, PostRegisterResponses, PostRegisterErrors, PostSmsResetPasswordData, PostSmsResetPasswordResponses, PostSmsResetPasswordErrors, PostMailResetPasswordData, PostMailResetPasswordResponses, GetUserAlbumsData, GetUserAlbumsResponses, PostUserAlbumsData, PostUserAlbumsResponses, PostUserAlbumsErrors, DeleteUserAlbumsByIdData, DeleteUserAlbumsByIdResponses, GetUserAlbumsByIdData, GetUserAlbumsByIdResponses, PutUserAlbumsByIdData, PutUserAlbumsByIdResponses, DeleteUserAlbumsByIdPhotosData, DeleteUserAlbumsByIdPhotosResponses, PostUserAlbumsByIdPhotosData, PostUserAlbumsByIdPhotosResponses, DeleteUserAlbumsByIdTagsData, DeleteUserAlbumsByIdTagsResponses, PostUserAlbumsByIdTagsData, PostUserAlbumsByIdTagsResponses, DeleteUserPhotosData, DeleteUserPhotosResponses, GetUserPhotosData, GetUserPhotosResponses, GetUserPhotosByIdData, GetUserPhotosByIdResponses, PutUserPhotosByIdData, PutUserPhotosByIdResponses, DeleteUserPhotosByIdTagsData, DeleteUserPhotosByIdTagsResponses, PostUserPhotosByIdTagsData, PostUserPhotosByIdTagsResponses, PutUserPhotosUpdateData, PutUserPhotosUpdateResponses, DeleteUserSharesData, DeleteUserSharesResponses, GetUserSharesData, GetUserSharesResponses, PostUserSharesData, PostUserSharesResponses, GetUserSharesByIdData, GetUserSharesByIdResponses, PutUserSharesByIdData, PutUserSharesByIdResponses, GetUserGroupsData, GetUserGroupsResponses, DeleteUserGroupsByIdData, DeleteUserGroupsByIdResponses, GetUserCapacitiesData, GetUserCapacitiesResponses, DeleteUserCapacitiesByIdData, DeleteUserCapacitiesByIdResponses, PostUserOrdersPreviewData, PostUserOrdersPreviewResponses, GetUserOrdersData, GetUserOrdersResponses, PostUserOrdersData, PostUserOrdersResponses, DeleteUserOrdersByTradeNoData, DeleteUserOrdersByTradeNoResponses, GetUserOrdersByTradeNoData, GetUserOrdersByTradeNoResponses, PutUserOrdersByTradeNoCancelData, PutUserOrdersByTradeNoCancelResponses, PostUserOrdersByTradeNoPayData, PostUserOrdersByTradeNoPayResponses, GetUserTicketsData, GetUserTicketsResponses, PostUserTicketsData, PostUserTicketsResponses, DeleteUserTicketsByIssueNoData, DeleteUserTicketsByIssueNoResponses, GetUserTicketsByIssueNoData, GetUserTicketsByIssueNoResponses, GetUserTicketsByIssueNoRepliesData, GetUserTicketsByIssueNoRepliesResponses, PostUserTicketsByIssueNoReplyData, PostUserTicketsByIssueNoReplyResponses, PutUserTicketsByIssueNoCloseData, PutUserTicketsByIssueNoCloseResponses, GetUserTokensData, GetUserTokensResponses, PostUserTokensData, PostUserTokensResponses, PostUserTokensErrors, DeleteUserTokensByIdData, DeleteUserTokensByIdResponses, PutUserPasswordData, PutUserPasswordResponses, PutUserPasswordErrors, GetUserProfileData, GetUserProfileResponses, PostUserProfileData, PostUserProfileResponses, PostUserSettingData, PostUserSettingResponses, PostUserBindPhoneData, PostUserBindPhoneResponses, PostUserBindEmailData, PostUserBindEmailResponses, GetExplorePhotosData, GetExplorePhotosResponses, PostExplorePhotosByIdReportData, PostExplorePhotosByIdReportResponses, PostExplorePhotosByIdLikeData, PostExplorePhotosByIdLikeResponses, DeleteExplorePhotosByIdUnlikeData, DeleteExplorePhotosByIdUnlikeResponses, PostExploreUsersByUsernameReportData, PostExploreUsersByUsernameReportResponses, GetExploreUsersByUsernamePhotosData, GetExploreUsersByUsernamePhotosResponses, GetExploreUsersByUsernameData, GetExploreUsersByUsernameResponses, GetExploreUsersByUsernameAlbumsData, GetExploreUsersByUsernameAlbumsResponses, GetExploreAlbumsData, GetExploreAlbumsResponses, GetExploreAlbumsByIdPhotosData, GetExploreAlbumsByIdPhotosResponses, PostExploreAlbumsByIdReportData, PostExploreAlbumsByIdReportResponses, PostExploreAlbumsByIdLikeData, PostExploreAlbumsByIdLikeResponses, DeleteExploreAlbumsByIdUnlikeData, DeleteExploreAlbumsByIdUnlikeResponses, GetExplorePhotosByIdData, GetExplorePhotosByIdResponses, GetExploreAlbumsByIdData, GetExploreAlbumsByIdResponses, GetPlansData, GetPlansResponses, GetPlansByIdData, GetPlansByIdResponses, GetPagesData, GetPagesResponses, GetPagesBySlugData, GetPagesBySlugResponses, GetSharesBySlugData, GetSharesBySlugResponses, GetSharesBySlugErrors, GetSharesBySlugPhotosData, GetSharesBySlugPhotosResponses, GetSharesBySlugPhotosErrors, PostSharesBySlugReportData, PostSharesBySlugReportResponses, PostSharesBySlugLikeData, PostSharesBySlugLikeResponses, DeleteSharesBySlugUnlikeData, DeleteSharesBySlugUnlikeResponses, GetNoticesData, GetNoticesResponses, GetNoticesByIdData, GetNoticesByIdResponses, GetChangelogData, GetChangelogResponses, GetLicenseData, GetLicenseResponses, GetCheckInstallationData, GetCheckInstallationResponses, PostInstallData, PostInstallResponses, GetConfigsData, GetConfigsResponses, GetGroupData, GetGroupResponses, PostUploadData, PostUploadResponses, PostUploadErrors, PostFeedbackData, PostFeedbackResponses, PostSmsSendData, PostSmsSendResponses, PostMailSendData, PostMailSendResponses, GetQrcodeData, GetQrcodeResponses, GetCaptchaData, GetCaptchaResponses, GetUserTokensPermissionsData, GetUserTokensPermissionsResponses, GetTokenPermissionsData, GetTokenPermissionsResponses, GetStatByKeyData, GetStatByKeyResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * 相册列表
 */
export const getApiV1Albums = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1AlbumsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1AlbumsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/v1/albums',
        ...options
    });
};

/**
 * 删除相册
 */
export const deleteApiV1AlbumsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV1AlbumsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV1AlbumsByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/v1/albums/{id}',
        ...options
    });
};

/**
 * 上传图片
 */
export const postApiV1Upload = <ThrowOnError extends boolean = false>(options?: Options<PostApiV1UploadData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiV1UploadResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/api/v1/upload',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * 图片列表
 */
export const getApiV1Images = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1ImagesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1ImagesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/v1/images',
        ...options
    });
};

/**
 * 删除图片
 */
export const deleteApiV1ImagesByKey = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV1ImagesByKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV1ImagesByKeyResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/v1/images/{key}',
        ...options
    });
};

/**
 * 生成临时上传token
 */
export const postApiV1ImagesTokens = <ThrowOnError extends boolean = false>(options?: Options<PostApiV1ImagesTokensData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiV1ImagesTokensResponses, unknown, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        responseType: 'json',
        url: '/api/v1/images/tokens',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        }
    });
};

/**
 * 策略列表
 */
export const getApiV1Strategies = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1StrategiesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1StrategiesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/v1/strategies',
        ...options
    });
};

/**
 * 用户资料
 */
export const getApiV1Profile = <ThrowOnError extends boolean = false>(options?: Options<GetApiV1ProfileData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiV1ProfileResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/api/v1/profile',
        ...options
    });
};

/**
 * 获取授权地址
 */
export const getOauthByIdRedirect = <ThrowOnError extends boolean = false>(options: Options<GetOauthByIdRedirectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOauthByIdRedirectResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/oauth/{id}/redirect',
        ...options
    });
};

/**
 * 授权登录
 * 返回 202 表示需要绑定或注册账号，需要将结构中的token储存，并携带到注册或登录页面，注册，请求注册或登录接口时将token一并发送即可绑定账号。
 */
export const postOauthByIdLogin = <ThrowOnError extends boolean = false>(options: Options<PostOauthByIdLoginData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOauthByIdLoginResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/oauth/{id}/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 绑定授权账号
 */
export const postOauthByIdBind = <ThrowOnError extends boolean = false>(options: Options<PostOauthByIdBindData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOauthByIdBindResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/oauth/{id}/bind',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 解绑授权账号
 */
export const deleteOauthByIdUnbind = <ThrowOnError extends boolean = false>(options: Options<DeleteOauthByIdUnbindData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOauthByIdUnbindResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/oauth/{id}/unbind',
        ...options
    });
};

/**
 * 已绑定的第三方列表
 */
export const getOauthBinds = <ThrowOnError extends boolean = false>(options?: Options<GetOauthBindsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetOauthBindsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/oauth/binds',
        ...options
    });
};

/**
 * 账号和密码登录
 */
export const postLogin = <ThrowOnError extends boolean = false>(options?: Options<PostLoginData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostLoginResponses, PostLoginErrors, ThrowOnError>({
        responseType: 'json',
        url: '/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 退出
 */
export const postLogout = <ThrowOnError extends boolean = false>(options?: Options<PostLogoutData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostLogoutResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/logout',
        ...options
    });
};

/**
 * 注册账号
 */
export const postRegister = <ThrowOnError extends boolean = false>(options?: Options<PostRegisterData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostRegisterResponses, PostRegisterErrors, ThrowOnError>({
        responseType: 'json',
        url: '/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 使用手机号重置密码
 */
export const postSmsResetPassword = <ThrowOnError extends boolean = false>(options?: Options<PostSmsResetPasswordData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSmsResetPasswordResponses, PostSmsResetPasswordErrors, ThrowOnError>({
        responseType: 'json',
        url: '/sms/reset_password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 使用邮箱重置密码
 */
export const postMailResetPassword = <ThrowOnError extends boolean = false>(options?: Options<PostMailResetPasswordData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostMailResetPasswordResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/mail/reset_password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 相册列表
 */
export const getUserAlbums = <ThrowOnError extends boolean = false>(options?: Options<GetUserAlbumsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserAlbumsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/albums',
        ...options
    });
};

/**
 * 添加相册
 */
export const postUserAlbums = <ThrowOnError extends boolean = false>(options?: Options<PostUserAlbumsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserAlbumsResponses, PostUserAlbumsErrors, ThrowOnError>({
        responseType: 'json',
        url: '/user/albums',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 删除相册
 */
export const deleteUserAlbumsById = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAlbumsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAlbumsByIdResponses, unknown, ThrowOnError>({
        url: '/user/albums/{id}',
        ...options
    });
};

/**
 * 相册详情
 */
export const getUserAlbumsById = <ThrowOnError extends boolean = false>(options: Options<GetUserAlbumsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAlbumsByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/albums/{id}',
        ...options
    });
};

/**
 * 修改相册
 */
export const putUserAlbumsById = <ThrowOnError extends boolean = false>(options: Options<PutUserAlbumsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserAlbumsByIdResponses, unknown, ThrowOnError>({
        url: '/user/albums/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 从相册中移除图片
 */
export const deleteUserAlbumsByIdPhotos = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAlbumsByIdPhotosData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAlbumsByIdPhotosResponses, unknown, ThrowOnError>({
        url: '/user/albums/{id}/photos',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 添加图片到相册
 */
export const postUserAlbumsByIdPhotos = <ThrowOnError extends boolean = false>(options: Options<PostUserAlbumsByIdPhotosData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAlbumsByIdPhotosResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/albums/{id}/photos',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 移除标签
 */
export const deleteUserAlbumsByIdTags = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAlbumsByIdTagsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAlbumsByIdTagsResponses, unknown, ThrowOnError>({
        url: '/user/albums/{id}/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 附加标签
 */
export const postUserAlbumsByIdTags = <ThrowOnError extends boolean = false>(options: Options<PostUserAlbumsByIdTagsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAlbumsByIdTagsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/albums/{id}/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 删除图片
 */
export const deleteUserPhotos = <ThrowOnError extends boolean = false>(options?: Options<DeleteUserPhotosData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteUserPhotosResponses, unknown, ThrowOnError>({
        url: '/user/photos',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 图片列表
 */
export const getUserPhotos = <ThrowOnError extends boolean = false>(options?: Options<GetUserPhotosData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserPhotosResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/photos',
        ...options
    });
};

/**
 * 图片详情
 */
export const getUserPhotosById = <ThrowOnError extends boolean = false>(options: Options<GetUserPhotosByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserPhotosByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/photos/{id}',
        ...options
    });
};

/**
 * 修改图片信息
 */
export const putUserPhotosById = <ThrowOnError extends boolean = false>(options: Options<PutUserPhotosByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserPhotosByIdResponses, unknown, ThrowOnError>({
        url: '/user/photos/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 移除标签
 */
export const deleteUserPhotosByIdTags = <ThrowOnError extends boolean = false>(options: Options<DeleteUserPhotosByIdTagsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserPhotosByIdTagsResponses, unknown, ThrowOnError>({
        url: '/user/photos/{id}/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 附加标签
 */
export const postUserPhotosByIdTags = <ThrowOnError extends boolean = false>(options: Options<PostUserPhotosByIdTagsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserPhotosByIdTagsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/photos/{id}/tags',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 批量修改图片信息
 */
export const putUserPhotosUpdate = <ThrowOnError extends boolean = false>(options?: Options<PutUserPhotosUpdateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutUserPhotosUpdateResponses, unknown, ThrowOnError>({
        url: '/user/photos/update',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 删除分享
 */
export const deleteUserShares = <ThrowOnError extends boolean = false>(options?: Options<DeleteUserSharesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteUserSharesResponses, unknown, ThrowOnError>({
        url: '/user/shares',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 分享列表
 */
export const getUserShares = <ThrowOnError extends boolean = false>(options?: Options<GetUserSharesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserSharesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/shares',
        ...options
    });
};

/**
 * 创建分享
 */
export const postUserShares = <ThrowOnError extends boolean = false>(options?: Options<PostUserSharesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserSharesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/shares',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 分享详情
 */
export const getUserSharesById = <ThrowOnError extends boolean = false>(options: Options<GetUserSharesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserSharesByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/shares/{id}',
        ...options
    });
};

/**
 * 修改分享信息
 */
export const putUserSharesById = <ThrowOnError extends boolean = false>(options: Options<PutUserSharesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserSharesByIdResponses, unknown, ThrowOnError>({
        url: '/user/shares/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 角色组列表
 */
export const getUserGroups = <ThrowOnError extends boolean = false>(options?: Options<GetUserGroupsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserGroupsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/groups',
        ...options
    });
};

/**
 * 删除角色组
 */
export const deleteUserGroupsById = <ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserGroupsByIdResponses, unknown, ThrowOnError>({
        url: '/user/groups/{id}',
        ...options
    });
};

/**
 * 容量列表
 */
export const getUserCapacities = <ThrowOnError extends boolean = false>(options?: Options<GetUserCapacitiesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserCapacitiesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/capacities',
        ...options
    });
};

/**
 * 删除容量
 */
export const deleteUserCapacitiesById = <ThrowOnError extends boolean = false>(options: Options<DeleteUserCapacitiesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserCapacitiesByIdResponses, unknown, ThrowOnError>({
        url: '/user/capacities/{id}',
        ...options
    });
};

/**
 * 预览订单
 */
export const postUserOrdersPreview = <ThrowOnError extends boolean = false>(options?: Options<PostUserOrdersPreviewData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserOrdersPreviewResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/orders/preview',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 订单列表
 */
export const getUserOrders = <ThrowOnError extends boolean = false>(options?: Options<GetUserOrdersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserOrdersResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/orders',
        ...options
    });
};

/**
 * 创建订单
 */
export const postUserOrders = <ThrowOnError extends boolean = false>(options?: Options<PostUserOrdersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserOrdersResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/orders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 删除订单
 */
export const deleteUserOrdersByTradeNo = <ThrowOnError extends boolean = false>(options: Options<DeleteUserOrdersByTradeNoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserOrdersByTradeNoResponses, unknown, ThrowOnError>({
        url: '/user/orders/{trade_no}',
        ...options
    });
};

/**
 * 订单详情
 */
export const getUserOrdersByTradeNo = <ThrowOnError extends boolean = false>(options: Options<GetUserOrdersByTradeNoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserOrdersByTradeNoResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/orders/{trade_no}',
        ...options
    });
};

/**
 * 取消订单
 */
export const putUserOrdersByTradeNoCancel = <ThrowOnError extends boolean = false>(options: Options<PutUserOrdersByTradeNoCancelData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserOrdersByTradeNoCancelResponses, unknown, ThrowOnError>({
        url: '/user/orders/{trade_no}/cancel',
        ...options
    });
};

/**
 * 支付订单
 */
export const postUserOrdersByTradeNoPay = <ThrowOnError extends boolean = false>(options: Options<PostUserOrdersByTradeNoPayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserOrdersByTradeNoPayResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/orders/{trade_no}/pay',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 工单列表
 */
export const getUserTickets = <ThrowOnError extends boolean = false>(options?: Options<GetUserTicketsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserTicketsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tickets',
        ...options
    });
};

/**
 * 创建工单
 */
export const postUserTickets = <ThrowOnError extends boolean = false>(options?: Options<PostUserTicketsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserTicketsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tickets',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 删除工单
 */
export const deleteUserTicketsByIssueNo = <ThrowOnError extends boolean = false>(options: Options<DeleteUserTicketsByIssueNoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserTicketsByIssueNoResponses, unknown, ThrowOnError>({
        url: '/user/tickets/{issue_no}',
        ...options
    });
};

/**
 * 工单详情
 */
export const getUserTicketsByIssueNo = <ThrowOnError extends boolean = false>(options: Options<GetUserTicketsByIssueNoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserTicketsByIssueNoResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tickets/{issue_no}',
        ...options
    });
};

/**
 * 工单回复列表
 */
export const getUserTicketsByIssueNoReplies = <ThrowOnError extends boolean = false>(options: Options<GetUserTicketsByIssueNoRepliesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserTicketsByIssueNoRepliesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tickets/{issue_no}/replies',
        ...options
    });
};

/**
 * 回复工单
 */
export const postUserTicketsByIssueNoReply = <ThrowOnError extends boolean = false>(options: Options<PostUserTicketsByIssueNoReplyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserTicketsByIssueNoReplyResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tickets/{issue_no}/reply',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 关闭工单
 */
export const putUserTicketsByIssueNoClose = <ThrowOnError extends boolean = false>(options: Options<PutUserTicketsByIssueNoCloseData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserTicketsByIssueNoCloseResponses, unknown, ThrowOnError>({
        url: '/user/tickets/{issue_no}/close',
        ...options
    });
};

/**
 * Token 列表
 */
export const getUserTokens = <ThrowOnError extends boolean = false>(options?: Options<GetUserTokensData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserTokensResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tokens',
        ...options
    });
};

/**
 * 创建 Token
 */
export const postUserTokens = <ThrowOnError extends boolean = false>(options?: Options<PostUserTokensData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserTokensResponses, PostUserTokensErrors, ThrowOnError>({
        responseType: 'json',
        url: '/user/tokens',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 删除 Token
 */
export const deleteUserTokensById = <ThrowOnError extends boolean = false>(options: Options<DeleteUserTokensByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserTokensByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tokens/{id}',
        ...options
    });
};

/**
 * 修改密码
 */
export const putUserPassword = <ThrowOnError extends boolean = false>(options?: Options<PutUserPasswordData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutUserPasswordResponses, PutUserPasswordErrors, ThrowOnError>({
        responseType: 'json',
        url: '/user/password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 登录用户信息
 */
export const getUserProfile = <ThrowOnError extends boolean = false>(options?: Options<GetUserProfileData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserProfileResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/profile',
        ...options
    });
};

/**
 * 修改登录用户信息
 */
export const postUserProfile = <ThrowOnError extends boolean = false>(options?: Options<PostUserProfileData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserProfileResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/user/profile',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * 保存设置信息
 */
export const postUserSetting = <ThrowOnError extends boolean = false>(options?: Options<PostUserSettingData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserSettingResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/setting',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 绑定/换绑手机号
 */
export const postUserBindPhone = <ThrowOnError extends boolean = false>(options?: Options<PostUserBindPhoneData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserBindPhoneResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/bind_phone',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 绑定/换绑邮箱
 */
export const postUserBindEmail = <ThrowOnError extends boolean = false>(options?: Options<PostUserBindEmailData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserBindEmailResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/bind_email',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 图片列表
 */
export const getExplorePhotos = <ThrowOnError extends boolean = false>(options?: Options<GetExplorePhotosData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetExplorePhotosResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/photos',
        ...options
    });
};

/**
 * 举报图片
 */
export const postExplorePhotosByIdReport = <ThrowOnError extends boolean = false>(options: Options<PostExplorePhotosByIdReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostExplorePhotosByIdReportResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/photos/{id}/report',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 点赞图片
 */
export const postExplorePhotosByIdLike = <ThrowOnError extends boolean = false>(options: Options<PostExplorePhotosByIdLikeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostExplorePhotosByIdLikeResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/photos/{id}/like',
        ...options
    });
};

/**
 * 取消点赞图片
 */
export const deleteExplorePhotosByIdUnlike = <ThrowOnError extends boolean = false>(options: Options<DeleteExplorePhotosByIdUnlikeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteExplorePhotosByIdUnlikeResponses, unknown, ThrowOnError>({
        url: '/explore/photos/{id}/unlike',
        ...options
    });
};

/**
 * 举报用户
 */
export const postExploreUsersByUsernameReport = <ThrowOnError extends boolean = false>(options: Options<PostExploreUsersByUsernameReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostExploreUsersByUsernameReportResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/users/{username}/report',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 图片列表
 */
export const getExploreUsersByUsernamePhotos = <ThrowOnError extends boolean = false>(options: Options<GetExploreUsersByUsernamePhotosData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExploreUsersByUsernamePhotosResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/users/{username}/photos',
        ...options
    });
};

/**
 * 用户主页信息
 */
export const getExploreUsersByUsername = <ThrowOnError extends boolean = false>(options: Options<GetExploreUsersByUsernameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExploreUsersByUsernameResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/users/{username}',
        ...options
    });
};

/**
 * 相册列表
 */
export const getExploreUsersByUsernameAlbums = <ThrowOnError extends boolean = false>(options: Options<GetExploreUsersByUsernameAlbumsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExploreUsersByUsernameAlbumsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/users/{username}/albums',
        ...options
    });
};

/**
 * 相册列表
 */
export const getExploreAlbums = <ThrowOnError extends boolean = false>(options?: Options<GetExploreAlbumsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetExploreAlbumsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/albums',
        ...options
    });
};

/**
 * 图片列表
 */
export const getExploreAlbumsByIdPhotos = <ThrowOnError extends boolean = false>(options: Options<GetExploreAlbumsByIdPhotosData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExploreAlbumsByIdPhotosResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/albums/{id}/photos',
        ...options
    });
};

/**
 * 举报相册
 */
export const postExploreAlbumsByIdReport = <ThrowOnError extends boolean = false>(options: Options<PostExploreAlbumsByIdReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostExploreAlbumsByIdReportResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/albums/{id}/report',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 点赞相册
 */
export const postExploreAlbumsByIdLike = <ThrowOnError extends boolean = false>(options: Options<PostExploreAlbumsByIdLikeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostExploreAlbumsByIdLikeResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/albums/{id}/like',
        ...options
    });
};

/**
 * 取消点赞相册
 */
export const deleteExploreAlbumsByIdUnlike = <ThrowOnError extends boolean = false>(options: Options<DeleteExploreAlbumsByIdUnlikeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteExploreAlbumsByIdUnlikeResponses, unknown, ThrowOnError>({
        url: '/explore/albums/{id}/unlike',
        ...options
    });
};

/**
 * 图片详情
 */
export const getExplorePhotosById = <ThrowOnError extends boolean = false>(options: Options<GetExplorePhotosByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExplorePhotosByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/photos/{id}',
        ...options
    });
};

/**
 * 相册详情
 */
export const getExploreAlbumsById = <ThrowOnError extends boolean = false>(options: Options<GetExploreAlbumsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExploreAlbumsByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/explore/albums/{id}',
        ...options
    });
};

/**
 * 套餐列表
 */
export const getPlans = <ThrowOnError extends boolean = false>(options?: Options<GetPlansData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPlansResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/plans',
        ...options
    });
};

/**
 * 套餐详情
 */
export const getPlansById = <ThrowOnError extends boolean = false>(options: Options<GetPlansByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPlansByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/plans/{id}',
        ...options
    });
};

/**
 * 页面列表
 */
export const getPages = <ThrowOnError extends boolean = false>(options?: Options<GetPagesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPagesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/pages',
        ...options
    });
};

/**
 * 页面详情
 */
export const getPagesBySlug = <ThrowOnError extends boolean = false>(options: Options<GetPagesBySlugData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPagesBySlugResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/pages/{slug}',
        ...options
    });
};

/**
 * 获取分享详情
 */
export const getSharesBySlug = <ThrowOnError extends boolean = false>(options: Options<GetSharesBySlugData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSharesBySlugResponses, GetSharesBySlugErrors, ThrowOnError>({
        responseType: 'json',
        url: '/shares/{slug}',
        ...options
    });
};

/**
 * 获取分享图片列表
 */
export const getSharesBySlugPhotos = <ThrowOnError extends boolean = false>(options: Options<GetSharesBySlugPhotosData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSharesBySlugPhotosResponses, GetSharesBySlugPhotosErrors, ThrowOnError>({
        responseType: 'json',
        url: '/shares/{slug}/photos',
        ...options
    });
};

/**
 * 举报分享
 */
export const postSharesBySlugReport = <ThrowOnError extends boolean = false>(options: Options<PostSharesBySlugReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSharesBySlugReportResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/shares/{slug}/report',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 点赞分享
 */
export const postSharesBySlugLike = <ThrowOnError extends boolean = false>(options: Options<PostSharesBySlugLikeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSharesBySlugLikeResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/shares/{slug}/like',
        ...options
    });
};

/**
 * 取消点赞分享
 */
export const deleteSharesBySlugUnlike = <ThrowOnError extends boolean = false>(options: Options<DeleteSharesBySlugUnlikeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSharesBySlugUnlikeResponses, unknown, ThrowOnError>({
        url: '/shares/{slug}/unlike',
        ...options
    });
};

/**
 * 公告列表
 */
export const getNotices = <ThrowOnError extends boolean = false>(options?: Options<GetNoticesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetNoticesResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/notices',
        ...options
    });
};

/**
 * 公告详情
 */
export const getNoticesById = <ThrowOnError extends boolean = false>(options: Options<GetNoticesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetNoticesByIdResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/notices/{id}',
        ...options
    });
};

/**
 * 更新日志
 */
export const getChangelog = <ThrowOnError extends boolean = false>(options?: Options<GetChangelogData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetChangelogResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/changelog',
        ...options
    });
};

/**
 * 许可 / 免责声明
 */
export const getLicense = <ThrowOnError extends boolean = false>(options?: Options<GetLicenseData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetLicenseResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/license',
        ...options
    });
};

/**
 * 检测程序是否安装
 */
export const getCheckInstallation = <ThrowOnError extends boolean = false>(options?: Options<GetCheckInstallationData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCheckInstallationResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/check-installation',
        ...options
    });
};

/**
 * 安装程序
 * @deprecated
 */
export const postInstall = <ThrowOnError extends boolean = false>(options?: Options<PostInstallData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostInstallResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/install',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 初始化配置
 */
export const getConfigs = <ThrowOnError extends boolean = false>(options?: Options<GetConfigsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetConfigsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/configs',
        ...options
    });
};

/**
 * 当前所在组信息
 */
export const getGroup = <ThrowOnError extends boolean = false>(options?: Options<GetGroupData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetGroupResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/group',
        ...options
    });
};

/**
 * 上传图片
 */
export const postUpload = <ThrowOnError extends boolean = false>(options?: Options<PostUploadData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUploadResponses, PostUploadErrors, ThrowOnError>({
        ...formDataBodySerializer,
        responseType: 'json',
        url: '/upload',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * 提交反馈与建议
 */
export const postFeedback = <ThrowOnError extends boolean = false>(options?: Options<PostFeedbackData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostFeedbackResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/feedback',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 发送短信验证码
 */
export const postSmsSend = <ThrowOnError extends boolean = false>(options?: Options<PostSmsSendData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSmsSendResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/sms/send',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 发送邮件验证码
 */
export const postMailSend = <ThrowOnError extends boolean = false>(options?: Options<PostMailSendData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostMailSendResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/mail/send',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * 生成二维码
 */
export const getQrcode = <ThrowOnError extends boolean = false>(options: Options<GetQrcodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetQrcodeResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/qrcode',
        ...options
    });
};

/**
 * 获取验证码
 */
export const getCaptcha = <ThrowOnError extends boolean = false>(options?: Options<GetCaptchaData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCaptchaResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/captcha',
        ...options
    });
};

/**
 * 当前登录用户支持拥有的权限列表
 */
export const getUserTokensPermissions = <ThrowOnError extends boolean = false>(options?: Options<GetUserTokensPermissionsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserTokensPermissionsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/user/tokens/permissions',
        ...options
    });
};

/**
 * 系统支持的所有令牌权限
 */
export const getTokenPermissions = <ThrowOnError extends boolean = false>(options?: Options<GetTokenPermissionsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetTokenPermissionsResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/token_permissions',
        ...options
    });
};

/**
 * 系统统计信息
 */
export const getStatByKey = <ThrowOnError extends boolean = false>(options: Options<GetStatByKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStatByKeyResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/stat/{key}',
        ...options
    });
};